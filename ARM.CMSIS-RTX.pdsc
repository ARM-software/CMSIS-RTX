<?xml version="1.0" encoding="UTF-8"?>

<package schemaVersion="1.7.36" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="https://raw.githubusercontent.com/Open-CMSIS-Pack/Open-CMSIS-Pack-Spec/v1.7.36/schema/PACK.xsd">
  <name>CMSIS-RTX</name>
  <description>RTX RTOS implementation of CMSIS-RTOS2 API</description>
  <vendor>ARM</vendor>
  <license>LICENSE</license>
  <licenseSets>
    <licenseSet id="all" default="true" gating="true">
      <license name="LICENSE" title="Apache 2.0 open-source license" spdx="Apache-2.0"/>
    </licenseSet>
  </licenseSets>
  <url>https://www.keil.com/pack/</url>

  <releases>
    <release version="1.0.0">
        Initial pack release ...
    </release>
  </releases>

  <requirements>
    <packages>
      <package vendor="ARM" name="CMSIS" version="6.0.0-0"/>
    </packages>
  </requirements>

  <conditions>

    <!-- TrustZone -->
    <condition id="No TrustZone">
      <description>No TrustZone</description>
      <require Dtz="NO_TZ"/>
    </condition>
    <condition id="TZ Disabled">
      <description>TrustZone (Disabled)</description>
      <require Dtz="TZ"/>
      <require Dsecure="TZ-disabled"/>
    </condition>
    <condition id="TZ Secure">
      <description>TrustZone (Secure)</description>
      <require Dtz="TZ"/>
      <require Dsecure="Secure"/>
    </condition>
    <condition id="TZ Non-secure">
      <description>TrustZone (Non-secure)</description>
      <require Dtz="TZ"/>
      <require Dsecure="Non-secure"/>
    </condition>

    <!-- Arm architecture -->
    <condition id="ARMv6-M Device">
      <description>Armv6-M architecture based device</description>
      <accept Dcore="Cortex-M0"/>
      <accept Dcore="Cortex-M1"/>
      <accept Dcore="Cortex-M0+"/>
      <accept Dcore="SC000"/>
    </condition>

    <condition id="ARMv7-M Device">
      <description>Armv7-M architecture based device</description>
      <accept Dcore="Cortex-M3"/>
      <accept Dcore="Cortex-M4"/>
      <accept Dcore="Cortex-M7"/>
      <accept Dcore="SC300"/>
    </condition>

    <condition id="ARMv7-M Device without FPU">
      <description>Armv7-M architecture based device without FPU</description>
      <require condition="ARMv7-M Device"/>
      <require Dfpu="NO_FPU"/>
    </condition>
    <condition id="ARMv7-M Device with FPU">
      <description>Armv7-M architecture based device with FPU</description>
      <require condition="ARMv7-M Device"/>
      <accept  Dfpu="SP_FPU"/>
      <accept  Dfpu="DP_FPU"/>
    </condition>

    <condition id="ARMv8-MBL Device">
      <description>Armv8-M base line architecture based device</description>
      <accept Dcore="ARMV8MBL"/>
      <accept Dcore="Cortex-M23"/>
    </condition>

    <condition id="ARMv8-MML Device">
      <description>Armv8-M main line architecture based device</description>
      <accept Dcore="ARMV8MML"/>
      <accept Dcore="Cortex-M33"/>
      <accept Dcore="Cortex-M35P"/>
      <accept Dcore="Star-MC1"/>
    </condition>

    <condition id="ARMv8-MML Device without FPU/MVE">
      <description>Armv8-M main line architecture based device without FPU/MVE</description>
      <require condition="ARMv8-MML Device"/>
      <require Dfpu="NO_FPU"/>
      <require Dmve="NO_MVE"/>
    </condition>
    <condition id="ARMv8-MML Device with FPU/MVE">
      <description>Armv8-M main line architecture based device with FPU/MVE</description>
      <require condition="ARMv8-MML Device"/>
      <accept Dfpu="SP_FPU"/>
      <accept Dfpu="DP_FPU"/>
      <accept Dmve="MVE"/>
      <accept Dmve="FP_MVE"/>
    </condition>

    <condition id="ARMv81-MML Device">
      <description>Armv8.1-M main line architecture based device</description>
      <accept Dcore="ARMV81MML"/>
      <accept Dcore="Cortex-M52"/>
      <accept Dcore="Cortex-M55"/>
      <accept Dcore="Cortex-M85"/>
    </condition>

    <condition id="ARMv81-MML Device without FPU/MVE">
      <description>Armv8.1-M main line architecture based device without FPU/MVE</description>
      <require condition="ARMv81-MML Device"/>
      <require Dfpu="NO_FPU"/>
      <require Dmve="NO_MVE"/>
    </condition>
    <condition id="ARMv81-MML Device with FPU/MVE">
      <description>Armv8.1-M main line architecture based device with FPU/MVE</description>
      <require condition="ARMv81-MML Device"/>
      <accept Dfpu="SP_FPU"/>
      <accept Dfpu="DP_FPU"/>
      <accept Dmve="MVE"/>
      <accept Dmve="FP_MVE"/>
    </condition>

    <condition id="ARMv8-M Device">
      <description>Armv8-M architecture based device</description>
      <accept condition="ARMv8-MBL Device"/>
      <accept condition="ARMv8-MML Device"/>
      <accept condition="ARMv81-MML Device"/>
    </condition>

    <condition id="ARMv8-M Device without TrustZone">
      <description>Armv8-M architecture based device without TrustZone</description>
      <require condition="ARMv8-M Device"/>
      <require condition="No TrustZone"/>
    </condition>
    <condition id="ARMv8-M Device with TZ Disabled">
      <description>Armv8-M architecture based device with TrustZone (Disabled)</description>
      <require condition="ARMv8-M Device"/>
      <require condition="TZ Disabled"/>
    </condition>
    <condition id="ARMv8-M Device with TZ Secure">
      <description>Armv8-M architecture based device with TrustZone (Secure)</description>
      <require condition="ARMv8-M Device"/>
      <require condition="TZ Secure"/>
    </condition>
    <condition id="ARMv8-M Device with TZ Non-secure">
      <description>Armv8-M architecture based device with TrustZone (Non-secure)</description>
      <require condition="ARMv8-M Device"/>
      <require condition="TZ Non-secure"/>
    </condition>

    <condition id="ARMv7-A Device">
      <description>Armv7-A architecture based device</description>
      <accept Dcore="Cortex-A5"/>
      <accept Dcore="Cortex-A7"/>
      <accept Dcore="Cortex-A9"/>
    </condition>

    <!-- Supported compilers/assembly modes -->
    <condition id="Compiler">
      <accept  Tcompiler="ARMCC" Toptions="AC6"/>
      <accept  Tcompiler="ARMCC" Toptions="AC6LTO"/>
      <accept  Tcompiler="GCC"/>
      <accept  Tcompiler="CLANG"/>
      <accept  Tcompiler="IAR"/>
    </condition>
    <condition id="ARMCC">
      <accept  Tcompiler="ARMCC" Toptions="AC6"/>
      <accept  Tcompiler="ARMCC" Toptions="AC6LTO"/>
    </condition>
    <condition id="GCC">
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="CLANG">
      <require Tcompiler="CLANG"/>
    </condition>
    <condition id="IAR">
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="GNUASM">
      <accept  Tcompiler="ARMCC" Toptions="AC6"/>
      <accept  Tcompiler="ARMCC" Toptions="AC6LTO"/>
      <accept  Tcompiler="GCC"/>
      <accept  Tcompiler="CLANG"/>
    </condition>
    <condition id="IARASM">
      <require Tcompiler="IAR"/>
    </condition>

    <!-- Compiler for architecture -->
    <condition id="ARMCC ARMv6-M">
      <description>Arm Compiler for Armv6-M architecture</description>
      <require condition="ARMCC"/>
      <require condition="ARMv6-M Device"/>
    </condition>
    <condition id="GCC ARMv6-M">
      <description>GCC Compiler for Armv6-M architecture</description>
      <require condition="GCC"/>
      <require condition="ARMv6-M Device"/>
    </condition>
    <condition id="CLANG ARMv6-M">
      <description>CLANG Compiler for Armv6-M architecture</description>
      <require condition="CLANG"/>
      <require condition="ARMv6-M Device"/>
    </condition>
    <condition id="IAR ARMv6-M">
      <description>IAR Compiler for Armv6-M architecture</description>
      <require condition="IAR"/>
      <require condition="ARMv6-M Device"/>
    </condition>

    <condition id="ARMCC ARMv7-M NOFP">
      <description>Arm Compiler for Armv7-M architecture without FPU</description>
      <require condition="ARMCC"/>
      <require condition="ARMv7-M Device without FPU"/>
    </condition>
    <condition id="GCC ARMv7-M NOFP">
      <description>GCC Compiler for Armv7-M architecture without FPU</description>
      <require condition="GCC"/>
      <require condition="ARMv7-M Device without FPU"/>
    </condition>
    <condition id="CLANG ARMv7-M NOFP">
      <description>CLANG Compiler for Armv7-M architecture without FPU</description>
      <require condition="CLANG"/>
      <require condition="ARMv7-M Device without FPU"/>
    </condition>
    <condition id="IAR ARMv7-M NOFP">
      <description>IAR Compiler for Armv7-M architecture without FPU</description>
      <require condition="IAR"/>
      <require condition="ARMv7-M Device without FPU"/>
    </condition>

    <condition id="ARMCC ARMv7-M FP">
      <description>Arm Compiler for Armv7-M architecture with FPU</description>
      <require condition="ARMCC"/>
      <require condition="ARMv7-M Device with FPU"/>
    </condition>
    <condition id="GCC ARMv7-M FP">
      <description>GCC Compiler for Armv7-M architecture with FPU</description>
      <require condition="GCC"/>
      <require condition="ARMv7-M Device with FPU"/>
    </condition>
    <condition id="CLANG ARMv7-M FP">
      <description>CLANG Compiler for Armv7-M architecture with FPU</description>
      <require condition="CLANG"/>
      <require condition="ARMv7-M Device with FPU"/>
    </condition>
    <condition id="IAR ARMv7-M FP">
      <description>IAR Compiler for Armv7-M architecture with FPU</description>
      <require condition="IAR"/>
      <require condition="ARMv7-M Device with FPU"/>
    </condition>

    <condition id="ARMCC ARMv8-MBL">
      <description>Arm Compiler for Armv8-M base line architecture</description>
      <require condition="ARMCC"/>
      <require condition="ARMv8-MBL Device"/>
    </condition>
    <condition id="GCC ARMv8-MBL">
      <description>GCC Compiler for Armv8-M base line architecture</description>
      <require condition="GCC"/>
      <require condition="ARMv8-MBL Device"/>
    </condition>
    <condition id="CLANG ARMv8-MBL">
      <description>CLANG Compiler for Armv8-M base line architecture</description>
      <require condition="CLANG"/>
      <require condition="ARMv8-MBL Device"/>
    </condition>
    <condition id="IAR ARMv8-MBL">
      <description>IAR Compiler for Armv8-M base line architecture</description>
      <require condition="IAR"/>
      <require condition="ARMv8-MBL Device"/>
    </condition>

    <condition id="ARMCC ARMv8-MML NOFP">
      <description>Arm Compiler for Armv8-M main line architecture without FPU/MVE</description>
      <require condition="ARMCC"/>
      <accept  condition="ARMv8-MML Device without FPU/MVE"/>
      <accept  condition="ARMv81-MML Device without FPU/MVE"/>
    </condition>
    <condition id="GCC ARMv8-MML NOFP">
      <description>GCC Compiler for Armv8-M main line architecture without FPU/MVE</description>
      <require condition="GCC"/>
      <accept  condition="ARMv8-MML Device without FPU/MVE"/>
      <accept  condition="ARMv81-MML Device without FPU/MVE"/>
    </condition>
    <condition id="CLANG ARMv8-MML NOFP">
      <description>CLANG Compiler for Armv8-M main line architecture without FPU/MVE</description>
      <require condition="CLANG"/>
      <accept  condition="ARMv8-MML Device without FPU/MVE"/>
      <accept  condition="ARMv81-MML Device without FPU/MVE"/>
    </condition>
    <condition id="IAR ARMv8-MML NOFP">
      <description>IAR Compiler for Armv8-M main line architecture without FPU/MVE</description>
      <require condition="IAR"/>
      <require condition="ARMv8-MML Device without FPU/MVE"/>
    </condition>
    <condition id="IAR ARMv81-MML NOFP">
      <description>IAR Compiler for Armv8.1-M main line architecture without FPU/MVE</description>
      <require condition="IAR"/>
      <require condition="ARMv81-MML Device without FPU/MVE"/>
    </condition>

    <condition id="ARMCC ARMv8-MML FP">
      <description>Arm Compiler for Armv8-M main line architecture with FPU/MVE</description>
      <require condition="ARMCC"/>
      <accept  condition="ARMv8-MML Device with FPU/MVE"/>
      <accept  condition="ARMv81-MML Device with FPU/MVE"/>
    </condition>
    <condition id="GCC ARMv8-MML FP">
      <description>GCC Compiler for Armv8-M main line architecture with FPU/MVE</description>
      <require condition="GCC"/>
      <accept  condition="ARMv8-MML Device with FPU/MVE"/>
      <accept  condition="ARMv81-MML Device with FPU/MVE"/>
    </condition>
    <condition id="CLANG ARMv8-MML FP">
      <description>CLANG Compiler for Armv8-M main line architecture with FPU/MVE</description>
      <require condition="CLANG"/>
      <accept  condition="ARMv8-MML Device with FPU/MVE"/>
      <accept  condition="ARMv81-MML Device with FPU/MVE"/>
    </condition>
    <condition id="IAR ARMv8-MML FP">
      <description>IAR Compiler for Armv8-M main line architecture with FPU/MVE</description>
      <require condition="IAR"/>
      <require condition="ARMv8-MML Device with FPU/MVE"/>
    </condition>
    <condition id="IAR ARMv81-MML FP">
      <description>IAR Compiler for Armv8.1-M main line architecture with FPU/MVE</description>
      <require condition="IAR"/>
      <require condition="ARMv81-MML Device with FPU/MVE"/>
    </condition>

    <condition id="ARMCC ARMv7-A">
      <description>Arm Compiler for Armv7-A architecture</description>
      <require condition="ARMCC"/>
      <require condition="ARMv7-A Device"/>
    </condition>
    <condition id="GCC ARMv7-A">
      <description>GCC Compiler for Armv7-A architecture</description>
      <require condition="GCC"/>
      <require condition="ARMv7-A Device"/>
    </condition>
    <condition id="IAR ARMv7-A">
      <description>IAR Compiler for Armv7-A architecture</description>
      <require condition="IAR"/>
      <require condition="ARMv7-A Device"/>
    </condition>

    <!-- Assembly for architecture -->
    <condition id="GNUASM ARMv6-M">
      <description>GNU Assembler for Armv6-M architecture</description>
      <require condition="GNUASM"/>
      <require condition="ARMv6-M Device"/>
    </condition>
    <condition id="IARASM ARMv6-M">
      <description>IAR Assembler for Armv6-M architecture</description>
      <require condition="IARASM"/>
      <require condition="ARMv6-M Device"/>
    </condition>

    <condition id="GNUASM ARMv7-M">
      <description>GNU Assembler for Armv7-M architecture</description>
      <require condition="GNUASM"/>
      <require condition="ARMv7-M Device"/>
    </condition>
    <condition id="IARASM ARMv7-M">
      <description>IAR Assembler for Armv7-M architecture</description>
      <require condition="IARASM"/>
      <require condition="ARMv7-M Device"/>
    </condition>

    <condition id="GNUASM ARMv8-MBL">
      <description>GNU Assembler for Armv8-M base line architecture</description>
      <require condition="GNUASM"/>
      <require condition="ARMv8-MBL Device"/>
    </condition>
    <condition id="IARASM ARMv8-MBL">
      <description>IAR Assembler for Armv8-M base line architecture</description>
      <require condition="IARASM"/>
      <require condition="ARMv8-MBL Device"/>
    </condition>

    <condition id="GNUASM ARMv8-MML">
      <description>GNU Assembler for Armv8-M/Armv8.1-M main line architecture</description>
      <require condition="GNUASM"/>
      <accept  condition="ARMv8-MML Device"/>
      <accept  condition="ARMv81-MML Device"/>
    </condition>
    <condition id="IARASM ARMv8-MML">
      <description>IAR Assembler for Armv8-M/Armv8.1-M main line architecture</description>
      <require condition="IARASM"/>
      <accept  condition="ARMv8-MML Device"/>
      <accept  condition="ARMv81-MML Device"/>
    </condition>

    <condition id="GNUASM ARMv7-A">
      <description>GNU Assembler for Armv7-A architecture</description>
      <require condition="GNUASM"/>
      <require condition="ARMv7-A Device"/>
    </condition>
    <condition id="IARASM ARMv7-A">
      <description>IAR Assembler for Armv7-A architecture</description>
      <require condition="IARASM"/>
      <require condition="ARMv7-A Device"/>
    </condition>

    <!-- Component dependencies -->
    <condition id="RTX5">
      <description>Components required for RTX5</description>
      <accept  condition="ARMv6-M Device"/>
      <accept  condition="ARMv7-M Device"/>
      <accept  condition="ARMv8-M Device without TrustZone"/>
      <accept  condition="ARMv8-M Device with TZ Disabled"/>
      <accept  condition="ARMv8-M Device with TZ Secure"/>
      <accept  condition="ARMv7-A Device"/>
      <require condition="Compiler"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <require Cclass="CMSIS"  Cgroup="OS Tick"/>
    </condition>
    <condition id="RTX5 NS">
      <description>Components required for RTX5 in Non-secure domain</description>
      <require condition="ARMv8-M Device with TZ Non-secure"/>
      <require condition="Compiler"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <require Cclass="CMSIS"  Cgroup="OS Tick"/>
    </condition>

  </conditions>

  <components>
    <component Cclass="CMSIS" Cgroup="RTOS2" Csub="Keil RTX5" Cvariant="Library" Cversion="5.9.0" Capiversion="2.3.0" condition="RTX5">
      <description>CMSIS-RTOS2 RTX5 for Cortex-M, SC000, SC300 and Armv7-A (Library)</description>
      <RTE_Components_h>
        <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_CMSIS_RTOS2                 /* CMSIS-RTOS2 */
        #define RTE_CMSIS_RTOS2_RTX5            /* CMSIS-RTOS2 Keil RTX5 */
      </RTE_Components_h>
      <files>
        <!-- RTX documentation -->
        <file category="doc"     name="Documentation/index.html"/>

        <!-- RTX system view description -->
        <file category="other"   name="RTX5.scvd"/>

        <!-- RTX header files -->
        <file category="header"  name="Include/rtx_os.h"/>

        <!-- RTX configuration -->
        <file category="header"  name="Config/RTX_Config.h"  attr="config"   version="5.6.0"/>
        <file category="source"  name="Config/RTX_Config.c"  attr="config"   version="5.2.0"/>
        <file category="source"  name="Config/handlers.c"    attr="config"   version="5.1.0" condition="ARMv7-A Device"/>

        <!-- RTX templates -->
        <file category="source"  name="Template/main.c"      attr="template" version="2.1.0" select="RTX 'main' function"/>
        <file category="source"  name="Template/Events.c"    attr="template" version="2.0.0" select="RTX Events"/>
        <file category="source"  name="Template/MemPool.c"   attr="template" version="2.0.0" select="RTX Memory Pool"/>
        <file category="source"  name="Template/MsgQueue.c"  attr="template" version="2.0.0" select="RTX Message Queue"/>
        <file category="source"  name="Template/Mutex.c"     attr="template" version="2.0.0" select="RTX Mutex"/>
        <file category="source"  name="Template/Semaphore.c" attr="template" version="2.0.0" select="RTX Semaphore"/>
        <file category="source"  name="Template/Thread.c"    attr="template" version="2.0.0" select="RTX Thread"/>
        <file category="source"  name="Template/Timer.c"     attr="template" version="2.0.1" select="RTX Timer"/>
        <file category="source"  name="Template/svc_user.c"  attr="template" version="1.0.0" select="RTX SVC User Table"/>

        <!-- RTX sources (library configuration) -->
        <file category="source"  name="Source/rtx_lib.c"/>

        <!-- RTX libraries (ARMCC) -->
        <file category="library" name="Library/ARM/RTX_V6M.lib"      src="Source" condition="ARMCC ARMv6-M"/>
        <file category="library" name="Library/ARM/RTX_V7M.lib"      src="Source" condition="ARMCC ARMv7-M NOFP"/>
        <file category="library" name="Library/ARM/RTX_V7MF.lib"     src="Source" condition="ARMCC ARMv7-M FP"/>
        <file category="library" name="Library/ARM/RTX_V8MB.lib"     src="Source" condition="ARMCC ARMv8-MBL"/>
        <file category="library" name="Library/ARM/RTX_V8MM.lib"     src="Source" condition="ARMCC ARMv8-MML NOFP"/>
        <file category="library" name="Library/ARM/RTX_V8MMF.lib"    src="Source" condition="ARMCC ARMv8-MML FP"/>
        <file category="library" name="Library/ARM/RTX_V7A.lib"      src="Source" condition="ARMCC ARMv7-A"/>

        <!-- RTX libraries (GCC) -->
        <file category="library" name="Library/GCC/libRTX_V6M.a"     src="Source" condition="GCC ARMv6-M"/>
        <file category="library" name="Library/GCC/libRTX_V7M.a"     src="Source" condition="GCC ARMv7-M NOFP"/>
        <file category="library" name="Library/GCC/libRTX_V7MF.a"    src="Source" condition="GCC ARMv7-M FP"/>
        <file category="library" name="Library/GCC/libRTX_V8MB.a"    src="Source" condition="GCC ARMv8-MBL"/>
        <file category="library" name="Library/GCC/libRTX_V8MM.a"    src="Source" condition="GCC ARMv8-MML NOFP"/>
        <file category="library" name="Library/GCC/libRTX_V8MMF.a"   src="Source" condition="GCC ARMv8-MML FP"/>
        <file category="library" name="Library/GCC/libRTX_V7A.a"     src="Source" condition="GCC ARMv7-A"/>

        <!-- RTX libraries (CLANG) -->
        <file category="library" name="Library/CLANG/libRTX_V6M.a"   src="Source" condition="CLANG ARMv6-M"/>
        <file category="library" name="Library/CLANG/libRTX_V7M.a"   src="Source" condition="CLANG ARMv7-M NOFP"/>
        <file category="library" name="Library/CLANG/libRTX_V7MF.a"  src="Source" condition="CLANG ARMv7-M FP"/>
        <file category="library" name="Library/CLANG/libRTX_V8MB.a"  src="Source" condition="CLANG ARMv8-MBL"/>
        <file category="library" name="Library/CLANG/libRTX_V8MM.a"  src="Source" condition="CLANG ARMv8-MML NOFP"/>
        <file category="library" name="Library/CLANG/libRTX_V8MMF.a" src="Source" condition="CLANG ARMv8-MML FP"/>

        <!-- RTX libraries (IAR) -->
        <file category="library" name="Library/IAR/RTX_V6M.a"        src="Source" condition="IAR ARMv6-M"/>
        <file category="library" name="Library/IAR/RTX_V7M.a"        src="Source" condition="IAR ARMv7-M NOFP"/>
        <file category="library" name="Library/IAR/RTX_V7MF.a"       src="Source" condition="IAR ARMv7-M FP"/>
        <file category="library" name="Library/IAR/RTX_V8MB.a"       src="Source" condition="IAR ARMv8-MBL"/>
        <file category="library" name="Library/IAR/RTX_V8MM.a"       src="Source" condition="IAR ARMv8-MML NOFP"/>
        <file category="library" name="Library/IAR/RTX_V8MMF.a"      src="Source" condition="IAR ARMv8-MML FP"/>
        <file category="library" name="Library/IAR/RTX_V81MM.a"      src="Source" condition="IAR ARMv81-MML NOFP"/>
        <file category="library" name="Library/IAR/RTX_V81MMF.a"     src="Source" condition="IAR ARMv81-MML FP"/>
        <file category="library" name="Library/IAR/RTX_V7A.a"        src="Source" condition="IAR ARMv7-A"/>
      </files>
    </component>
    <component Cclass="CMSIS" Cgroup="RTOS2" Csub="Keil RTX5" Cvariant="Library" Cversion="5.9.0" Capiversion="2.3.0" condition="RTX5 NS">
      <description>CMSIS-RTOS2 RTX5 for Armv8-M/Armv8.1-M Non-secure domain (Library)</description>
      <RTE_Components_h>
        <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_CMSIS_RTOS2                 /* CMSIS-RTOS2 */
        #define RTE_CMSIS_RTOS2_RTX5            /* CMSIS-RTOS2 Keil RTX5 */
        #define RTE_CMSIS_RTOS2_RTX5_ARMV8M_NS  /* CMSIS-RTOS2 Keil RTX5 Armv8-M Non-secure domain */
      </RTE_Components_h>
      <files>
        <!-- RTX documentation -->
        <file category="doc"     name="Documentation/index.html"/>

        <!-- RTX system view description -->
        <file category="other"   name="RTX5.scvd"/>

        <!-- RTX header files -->
        <file category="header"  name="Include/rtx_os.h"/>

        <!-- RTX configuration -->
        <file category="header"  name="Config/RTX_Config.h"  attr="config"   version="5.6.0"/>
        <file category="source"  name="Config/RTX_Config.c"  attr="config"   version="5.2.0"/>

        <!-- RTX templates -->
        <file category="source"  name="Template/main.c"      attr="template" version="2.1.0" select="RTX 'main' function"/>
        <file category="source"  name="Template/Events.c"    attr="template" version="2.0.0" select="RTX Events"/>
        <file category="source"  name="Template/MemPool.c"   attr="template" version="2.0.0" select="RTX Memory Pool"/>
        <file category="source"  name="Template/MsgQueue.c"  attr="template" version="2.0.0" select="RTX Message Queue"/>
        <file category="source"  name="Template/Mutex.c"     attr="template" version="2.0.0" select="RTX Mutex"/>
        <file category="source"  name="Template/Semaphore.c" attr="template" version="2.0.0" select="RTX Semaphore"/>
        <file category="source"  name="Template/Thread.c"    attr="template" version="2.0.0" select="RTX Thread"/>
        <file category="source"  name="Template/Timer.c"     attr="template" version="2.0.1" select="RTX Timer"/>
        <file category="source"  name="Template/svc_user.c"  attr="template" version="1.0.0" select="RTX SVC User Table"/>

        <!-- RTX sources (library configuration) -->
        <file category="source"  name="Source/rtx_lib.c"/>

        <!-- RTX libraries (ARMCC) -->
        <file category="library" name="Library/ARM/RTX_V8MBN.lib"     src="Source" condition="ARMCC ARMv8-MBL"/>
        <file category="library" name="Library/ARM/RTX_V8MMN.lib"     src="Source" condition="ARMCC ARMv8-MML NOFP"/>
        <file category="library" name="Library/ARM/RTX_V8MMFN.lib"    src="Source" condition="ARMCC ARMv8-MML FP"/>

        <!-- RTX libraries (GCC) -->
        <file category="library" name="Library/GCC/libRTX_V8MBN.a"    src="Source" condition="GCC ARMv8-MBL"/>
        <file category="library" name="Library/GCC/libRTX_V8MMN.a"    src="Source" condition="GCC ARMv8-MML NOFP"/>
        <file category="library" name="Library/GCC/libRTX_V8MMFN.a"   src="Source" condition="GCC ARMv8-MML FP"/>

        <!-- RTX libraries (CLANG) -->
        <file category="library" name="Library/CLANG/libRTX_V8MBN.a"  src="Source" condition="CLANG ARMv8-MBL"/>
        <file category="library" name="Library/CLANG/libRTX_V8MMN.a"  src="Source" condition="CLANG ARMv8-MML NOFP"/>
        <file category="library" name="Library/CLANG/libRTX_V8MMFN.a" src="Source" condition="CLANG ARMv8-MML FP"/>

        <!-- RTX libraries (IAR) -->
        <file category="library" name="Library/IAR/RTX_V8MBN.a"       src="Source" condition="IAR ARMv8-MBL"/>
        <file category="library" name="Library/IAR/RTX_V8MMN.a"       src="Source" condition="IAR ARMv8-MML NOFP"/>
        <file category="library" name="Library/IAR/RTX_V8MMFN.a"      src="Source" condition="IAR ARMv8-MML FP"/>
        <file category="library" name="Library/IAR/RTX_V81MMN.a"      src="Source" condition="IAR ARMv81-MML NOFP"/>
        <file category="library" name="Library/IAR/RTX_V81MMFN.a"     src="Source" condition="IAR ARMv81-MML FP"/>
      </files>
    </component>
    <component Cclass="CMSIS" Cgroup="RTOS2" Csub="Keil RTX5" Cvariant="Source" Cversion="5.9.0" Capiversion="2.3.0" condition="RTX5">
      <description>CMSIS-RTOS2 RTX5 for Cortex-M, SC000, SC300 and Armv7-A (Source)</description>
      <RTE_Components_h>
        <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_CMSIS_RTOS2                 /* CMSIS-RTOS2 */
        #define RTE_CMSIS_RTOS2_RTX5            /* CMSIS-RTOS2 Keil RTX5 */
        #define RTE_CMSIS_RTOS2_RTX5_SOURCE     /* CMSIS-RTOS2 Keil RTX5 Source */
      </RTE_Components_h>
      <files>
        <!-- RTX documentation -->
        <file category="doc"    name="Documentation/index.html"/>

        <!-- RTX system view description -->
        <file category="other"  name="RTX5.scvd"/>

        <!-- RTX header files -->
        <file category="header" name="Include/rtx_os.h"/>

        <!-- RTX configuration -->
        <file category="header" name="Config/RTX_Config.h"  attr="config"   version="5.6.0"/>
        <file category="source" name="Config/RTX_Config.c"  attr="config"   version="5.2.0"/>
        <file category="source" name="Config/handlers.c"    attr="config"   version="5.1.0" condition="ARMv7-A Device"/>

        <!-- RTX templates -->
        <file category="source" name="Template/main.c"      attr="template" version="2.1.0" select="RTX 'main' function"/>
        <file category="source" name="Template/Events.c"    attr="template" version="2.0.0" select="RTX Events"/>
        <file category="source" name="Template/MemPool.c"   attr="template" version="2.0.0" select="RTX Memory Pool"/>
        <file category="source" name="Template/MsgQueue.c"  attr="template" version="2.0.0" select="RTX Message Queue"/>
        <file category="source" name="Template/Mutex.c"     attr="template" version="2.0.0" select="RTX Mutex"/>
        <file category="source" name="Template/Semaphore.c" attr="template" version="2.0.0" select="RTX Semaphore"/>
        <file category="source" name="Template/Thread.c"    attr="template" version="2.0.0" select="RTX Thread"/>
        <file category="source" name="Template/Timer.c"     attr="template" version="2.0.1" select="RTX Timer"/>
        <file category="source" name="Template/svc_user.c"  attr="template" version="1.0.0" select="RTX SVC User Table"/>

        <!-- RTX sources (core) -->
        <file category="source" name="Source/rtx_kernel.c"/>
        <file category="source" name="Source/rtx_thread.c"/>
        <file category="source" name="Source/rtx_delay.c"/>
        <file category="source" name="Source/rtx_timer.c"/>
        <file category="source" name="Source/rtx_evflags.c"/>
        <file category="source" name="Source/rtx_mutex.c"/>
        <file category="source" name="Source/rtx_semaphore.c"/>
        <file category="source" name="Source/rtx_memory.c"/>
        <file category="source" name="Source/rtx_mempool.c"/>
        <file category="source" name="Source/rtx_msgqueue.c"/>
        <file category="source" name="Source/rtx_system.c"/>
        <file category="source" name="Source/rtx_evr.c"/>

        <!-- RTX sources (library configuration) -->
        <file category="source" name="Source/rtx_lib.c"/>

        <!-- RTX sources (handlers GAS) -->
        <file category="source" name="Source/GCC/irq_armv6m.S"   condition="GNUASM ARMv6-M"/>
        <file category="source" name="Source/GCC/irq_armv7m.S"   condition="GNUASM ARMv7-M"/>
        <file category="source" name="Source/GCC/irq_armv8mbl.S" condition="GNUASM ARMv8-MBL"/>
        <file category="source" name="Source/GCC/irq_armv8mml.S" condition="GNUASM ARMv8-MML"/>
        <file category="source" name="Source/GCC/irq_armv7a.S"   condition="GNUASM ARMv7-A"/>

        <!-- RTX sources (handlers IAR) -->
        <file category="source" name="Source/IAR/irq_armv6m.s"   condition="IARASM ARMv6-M"/>
        <file category="source" name="Source/IAR/irq_armv7m.s"   condition="IARASM ARMv7-M"/>
        <file category="source" name="Source/IAR/irq_armv8mbl.s" condition="IARASM ARMv8-MBL"/>
        <file category="source" name="Source/IAR/irq_armv8mml.s" condition="IARASM ARMv8-MML"/>
        <file category="source" name="Source/IAR/irq_armv7a.s"   condition="IARASM ARMv7-A"/>
      </files>
    </component>
    <component Cclass="CMSIS" Cgroup="RTOS2" Csub="Keil RTX5" Cvariant="Source" Cversion="5.9.0" Capiversion="2.3.0" condition="RTX5 NS">
      <description>CMSIS-RTOS2 RTX5 for Armv8-M/Armv8.1-M Non-secure domain (Source)</description>
      <RTE_Components_h>
        <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_CMSIS_RTOS2                 /* CMSIS-RTOS2 */
        #define RTE_CMSIS_RTOS2_RTX5            /* CMSIS-RTOS2 Keil RTX5 */
        #define RTE_CMSIS_RTOS2_RTX5_SOURCE     /* CMSIS-RTOS2 Keil RTX5 Source */
        #define RTE_CMSIS_RTOS2_RTX5_ARMV8M_NS  /* CMSIS-RTOS2 Keil RTX5 Armv8-M Non-secure domain */
      </RTE_Components_h>
      <files>
        <!-- RTX documentation -->
        <file category="doc"    name="Documentation/index.html"/>

        <!-- RTX system view description -->
        <file category="other"  name="RTX5.scvd"/>

        <!-- RTX header files -->
        <file category="header" name="Include/rtx_os.h"/>

        <!-- RTX configuration -->
        <file category="header" name="Config/RTX_Config.h"  attr="config"   version="5.6.0"/>
        <file category="source" name="Config/RTX_Config.c"  attr="config"   version="5.2.0"/>

        <!-- RTX templates -->
        <file category="source" name="Template/main.c"      attr="template" version="2.1.0" select="RTX 'main' function"/>
        <file category="source" name="Template/Events.c"    attr="template" version="2.0.0" select="RTX Events"/>
        <file category="source" name="Template/MemPool.c"   attr="template" version="2.0.0" select="RTX Memory Pool"/>
        <file category="source" name="Template/MsgQueue.c"  attr="template" version="2.0.0" select="RTX Message Queue"/>
        <file category="source" name="Template/Mutex.c"     attr="template" version="2.0.0" select="RTX Mutex"/>
        <file category="source" name="Template/Semaphore.c" attr="template" version="2.0.0" select="RTX Semaphore"/>
        <file category="source" name="Template/Thread.c"    attr="template" version="2.0.0" select="RTX Thread"/>
        <file category="source" name="Template/Timer.c"     attr="template" version="2.0.1" select="RTX Timer"/>
        <file category="source" name="Template/svc_user.c"  attr="template" version="1.0.0" select="RTX SVC User Table"/>

        <!-- RTX sources (core) -->
        <file category="source" name="Source/rtx_kernel.c"/>
        <file category="source" name="Source/rtx_thread.c"/>
        <file category="source" name="Source/rtx_delay.c"/>
        <file category="source" name="Source/rtx_timer.c"/>
        <file category="source" name="Source/rtx_evflags.c"/>
        <file category="source" name="Source/rtx_mutex.c"/>
        <file category="source" name="Source/rtx_semaphore.c"/>
        <file category="source" name="Source/rtx_memory.c"/>
        <file category="source" name="Source/rtx_mempool.c"/>
        <file category="source" name="Source/rtx_msgqueue.c"/>
        <file category="source" name="Source/rtx_system.c"/>
        <file category="source" name="Source/rtx_evr.c"/>

        <!-- RTX sources (library configuration) -->
        <file category="source" name="Source/rtx_lib.c"/>

        <!-- RTX sources (handlers GAS) -->
        <file category="source" name="Source/GCC/irq_armv8mbl.S" condition="GNUASM ARMv8-MBL"/>
        <file category="source" name="Source/GCC/irq_armv8mml.S" condition="GNUASM ARMv8-MML"/>

        <!-- RTX sources (handlers IAR) -->
        <file category="source" name="Source/IAR/irq_armv8mbl.s" condition="IARASM ARMv8-MBL"/>
        <file category="source" name="Source/IAR/irq_armv8mml.s" condition="IARASM ARMv8-MML"/>
      </files>
    </component>
  </components>

  <examples>

    <example name="CMSIS-RTOS2 Blinky" doc="Abstract.txt" folder="Examples/Blinky">
      <description>CMSIS-RTOS2 Blinky example</description>
      <board name="uVision Simulator" vendor="Keil"/>
      <project>
        <environment name="uv" load="Blinky.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="CMSIS" Cgroup="CORE"/>
        <component Cclass="CMSIS" Cgroup="RTOS2"/>
        <category>Getting Started</category>
      </attributes>
    </example>

    <example name="CMSIS-RTOS2 RTX5 Memory Pool" doc="Abstract.txt" folder="Examples/MemPool">
      <description>CMSIS-RTOS2 Memory Pool Example</description>
      <board name="uVision Simulator" vendor="Keil"/>
      <project>
        <environment name="uv" load="MemPool.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="CMSIS" Cgroup="CORE"/>
        <component Cclass="CMSIS" Cgroup="RTOS2"/>
        <category>Getting Started</category>
      </attributes>
    </example>

    <example name="CMSIS-RTOS2 RTX5 Message Queue" doc="Abstract.txt" folder="Examples/MsgQueue">
      <description>CMSIS-RTOS2 Message Queue Example</description>
      <board name="uVision Simulator" vendor="Keil"/>
      <project>
        <environment name="uv" load="MsgQueue.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="CMSIS" Cgroup="CORE"/>
        <component Cclass="CMSIS" Cgroup="RTOS2"/>
        <category>Getting Started</category>
      </attributes>
    </example>

    <example name="TrustZone for ARMv8-M No RTOS" doc="Abstract.txt" folder="Examples/TrustZoneV8M/NoRTOS">
      <description>Bare-metal secure/non-secure example without RTOS</description>
      <board name="uVision Simulator" vendor="Keil"/>
      <project>
        <environment name="uv" load="NoRTOS.uvmpw"/>
      </project>
      <attributes>
        <component Cclass="CMSIS" Cgroup="CORE"/>
        <component Cclass="CMSIS" Cgroup="RTOS2"/>
        <category>Getting Started</category>
      </attributes>
    </example>

    <example name="TrustZone for ARMv8-M RTOS" doc="Abstract.txt" folder="Examples/TrustZoneV8M/RTOS">
      <description>Secure/non-secure RTOS example with thread context management</description>
      <board name="uVision Simulator" vendor="Keil"/>
      <project>
        <environment name="uv" load="RTOS.uvmpw"/>
      </project>
      <attributes>
        <component Cclass="CMSIS" Cgroup="CORE"/>
        <component Cclass="CMSIS" Cgroup="RTOS2"/>
        <category>Getting Started</category>
      </attributes>
    </example>

    <example name="TrustZone for ARMv8-M RTOS Security Tests" doc="Abstract.txt" folder="Examples/TrustZoneV8M/RTOS_Faults">
      <description>Secure/non-secure RTOS example with security test cases and system recovery</description>
      <board name="uVision Simulator" vendor="Keil"/>
      <project>
        <environment name="uv" load="RTOS_Faults.uvmpw"/>
      </project>
      <attributes>
        <component Cclass="CMSIS" Cgroup="CORE"/>
        <component Cclass="CMSIS" Cgroup="RTOS2"/>
        <category>Getting Started</category>
      </attributes>
    </example>

  </examples>

</package>
