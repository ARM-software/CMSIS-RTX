Component: ARM Compiler 5.06 update 4 (build 422) Tool: armlink [4d35d2]

==============================================================================

Section Cross References

    blinky.o(.text) refers to printf1.o(i.__0printf$1) for __2printf
    blinky.o(.text) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    blinky.o(.text) refers to rtx_delay.o(.text.osDelay) for osDelay
    blinky.o(.text) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    blinky.o(.text) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    blinky.o(.text) refers to system_armcm3.o(.text) for SystemCoreClockUpdate
    blinky.o(.text) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    blinky.o(.text) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    blinky.o(.text) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    blinky.o(.text) refers to blinky.o(.data) for tid_clock
    rtx_config.o(.constdata) refers to rtx_config.o(.bss.os.thread.cb) for os_idle_thread_cb
    rtx_config.o(.constdata) refers to rtx_config.o(.bss.os.thread.stack) for os_idle_thread_stack
    rtx_config.o(.constdata) refers to rtx_config.o(.bss.os.msgqueue.cb) for os_timer_mq_cb
    rtx_config.o(.constdata) refers to rtx_config.o(.bss.os.msgqueue.mem) for os_timer_mq_data
    rtx_config.o(.constdata) refers to rtx_config.o(.bss.os) for os_isr_queue
    rtx_config.o(.constdata) refers to rtx_config.o(.data.os.thread.mpi) for os_mpi_def_stack
    rtx_config.o(.data) refers to irq_cm3.o(.constdata) for os_irq_cm
    rtx_config.o(.data.os.thread.mpi) refers to rtx_config.o(.bss.os.thread.cb) for os_thread_cb
    rtx_config.o(.data.os.thread.mpi) refers to rtx_config.o(.bss.os.thread.stack) for os_thread_def_stack
    retarget_io.o(.text) refers to fputs.o(i.fputs) for fputs
    retarget_io.o(.text) refers to retarget_io.o(.data) for ITM_RxBuffer
    retarget_io.o(.text) refers to stdout.o(.data) for __stdout
    retarget_io.o(.text) refers to stderr.o(.data) for __stderr
    startup_armcm3.o(RESET) refers to startup_armcm3.o(STACK) for __initial_sp
    startup_armcm3.o(RESET) refers to startup_armcm3.o(.text) for Reset_Handler
    startup_armcm3.o(RESET) refers to irq_cm3.o(.text) for SVC_Handler
    startup_armcm3.o(.text) refers to system_armcm3.o(.text) for SystemInit
    startup_armcm3.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    system_armcm3.o(.text) refers to system_armcm3.o(.data) for SystemCoreClock
    system_armcm3.o(.text) refers to startup_armcm3.o(RESET) for __Vectors
    rtx_kernel.o(.text.os_svcKernelInitialize) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_kernel.o(.text.os_svcKernelInitialize) refers to memseta.o(.text) for __aeabi_memclr8
    rtx_kernel.o(.text.os_svcKernelInitialize) refers to rtx_config.o(.constdata) for os_Config
    rtx_kernel.o(.text.os_svcKernelInitialize) refers to rtx_memory.o(.text.os_MemoryInit) for os_MemoryInit
    rtx_kernel.o(.text.os_svcKernelInitialize) refers to rtx_mempool.o(.text.os_MemoryPoolInit) for os_MemoryPoolInit
    rtx_kernel.o(.text.os_svcKernelInitialize) refers to rtx_config.o(.text) for os_IdleThread
    rtx_kernel.o(.text.os_svcKernelInitialize) refers to rtx_thread.o(.text.os_svcThreadNew) for os_svcThreadNew
    rtx_kernel.o(.ARM.exidx.text.os_svcKernelInitialize) refers to rtx_kernel.o(.text.os_svcKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.os_svcKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.text.os_svcKernelGetInfo) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.ARM.exidx.text.os_svcKernelGetInfo) refers to rtx_kernel.o(.text.os_svcKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.os_svcKernelGetState) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_kernel.o(.ARM.exidx.text.os_svcKernelGetState) refers to rtx_kernel.o(.text.os_svcKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.os_svcKernelStart) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_kernel.o(.text.os_svcKernelStart) refers to rtx_thread.o(.text.os_ThreadListGet) for os_ThreadListGet
    rtx_kernel.o(.text.os_svcKernelStart) refers to rtx_thread.o(.text.os_ThreadSwitch) for os_ThreadSwitch
    rtx_kernel.o(.text.os_svcKernelStart) refers to rtx_config.o(.constdata) for os_Config
    rtx_kernel.o(.text.os_svcKernelStart) refers to system_armcm3.o(.data) for SystemCoreClock
    rtx_kernel.o(.text.os_svcKernelStart) refers to rtx_system.o(.text.os_SysTimerSetup) for os_SysTimerSetup
    rtx_kernel.o(.text.os_svcKernelStart) refers to rtx_system.o(.text.os_SysTimerEnable) for os_SysTimerEnable
    rtx_kernel.o(.ARM.exidx.text.os_svcKernelStart) refers to rtx_kernel.o(.text.os_svcKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.os_svcKernelLock) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_kernel.o(.ARM.exidx.text.os_svcKernelLock) refers to rtx_kernel.o(.text.os_svcKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.os_svcKernelUnlock) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_kernel.o(.ARM.exidx.text.os_svcKernelUnlock) refers to rtx_kernel.o(.text.os_svcKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.os_svcKernelSuspend) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_kernel.o(.text.os_svcKernelSuspend) refers to rtx_system.o(.text.os_SysTimerDisable) for os_SysTimerDisable
    rtx_kernel.o(.ARM.exidx.text.os_svcKernelSuspend) refers to rtx_kernel.o(.text.os_svcKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.os_svcKernelResume) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_kernel.o(.text.os_svcKernelResume) refers to rtx_thread.o(.text.os_ThreadDelayTick) for os_ThreadDelayTick
    rtx_kernel.o(.text.os_svcKernelResume) refers to rtx_timer.o(.text.os_TimerTick) for os_TimerTick
    rtx_kernel.o(.text.os_svcKernelResume) refers to rtx_thread.o(.text.os_ThreadDispatch) for os_ThreadDispatch
    rtx_kernel.o(.text.os_svcKernelResume) refers to rtx_system.o(.text.os_SysTimerEnable) for os_SysTimerEnable
    rtx_kernel.o(.ARM.exidx.text.os_svcKernelResume) refers to rtx_kernel.o(.text.os_svcKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.os_svcKernelGetTickCount) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_kernel.o(.ARM.exidx.text.os_svcKernelGetTickCount) refers to rtx_kernel.o(.text.os_svcKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.os_svcKernelGetTickFreq) refers to rtx_config.o(.constdata) for os_Config
    rtx_kernel.o(.ARM.exidx.text.os_svcKernelGetTickFreq) refers to rtx_kernel.o(.text.os_svcKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.os_svcKernelGetSysTimerCount) refers to rtx_system.o(.text.os_SysTimerGetCount) for os_SysTimerGetCount
    rtx_kernel.o(.ARM.exidx.text.os_svcKernelGetSysTimerCount) refers to rtx_kernel.o(.text.os_svcKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.os_svcKernelGetSysTimerFreq) refers to rtx_system.o(.text.os_SysTimerGetFreq) for os_SysTimerGetFreq
    rtx_kernel.o(.ARM.exidx.text.os_svcKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.os_svcKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.os_svcKernelInitialize) for os_svcKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.text.osKernelGetInfo) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.os_svcKernelGetInfo) for os_svcKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.os_svcKernelGetState) for os_svcKernelGetState
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.os_svcKernelStart) for os_svcKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.os_svcKernelLock) for os_svcKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.os_svcKernelUnlock) for os_svcKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.os_svcKernelSuspend) for os_svcKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.os_svcKernelResume) for os_svcKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.os_svcKernelGetTickCount) for os_svcKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_config.o(.constdata) for os_Config
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.os_svcKernelGetTickFreq) for os_svcKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_system.o(.text.os_SysTimerGetCount) for os_SysTimerGetCount
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.os_svcKernelGetSysTimerCount) for os_svcKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_system.o(.text.os_SysTimerGetFreq) for os_SysTimerGetFreq
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.os_svcKernelGetSysTimerFreq) for os_svcKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.data.os_irq_cm_lib_ref) refers to irq_cm3.o(.constdata) for os_irq_cm
    rtx_thread.o(.ARM.exidx.text.os_ThreadListPut) refers to rtx_thread.o(.text.os_ThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.os_ThreadListGet) refers to rtx_thread.o(.text.os_ThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.os_ThreadListSort) refers to rtx_thread.o(.text.os_ThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.os_ThreadListRemove) refers to rtx_thread.o(.text.os_ThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.os_ThreadListUnlink) refers to rtx_thread.o(.text.os_ThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.os_ThreadReadyPut) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_thread.o(.ARM.exidx.text.os_ThreadReadyPut) refers to rtx_thread.o(.text.os_ThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.os_ThreadDelayInsert) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_thread.o(.ARM.exidx.text.os_ThreadDelayInsert) refers to rtx_thread.o(.text.os_ThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.os_ThreadDelayRemove) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_thread.o(.ARM.exidx.text.os_ThreadDelayRemove) refers to rtx_thread.o(.text.os_ThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.os_ThreadDelayTick) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_thread.o(.ARM.exidx.text.os_ThreadDelayTick) refers to rtx_thread.o(.text.os_ThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.os_ThreadRegPtr) refers to rtx_thread.o(.text.os_ThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.os_ThreadBlock) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_thread.o(.ARM.exidx.text.os_ThreadBlock) refers to rtx_thread.o(.text.os_ThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.os_ThreadSwitch) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_thread.o(.text.os_ThreadSwitch) refers to rtx_thread.o(.text.os_ThreadStackCheck) for os_ThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.os_ThreadSwitch) refers to rtx_thread.o(.text.os_ThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.os_ThreadStackCheck) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_thread.o(.text.os_ThreadStackCheck) refers to rtx_config.o(.text) for os_Error
    rtx_thread.o(.ARM.exidx.text.os_ThreadStackCheck) refers to rtx_thread.o(.text.os_ThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.os_ThreadDispatch) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_thread.o(.text.os_ThreadDispatch) refers to rtx_thread.o(.text.os_ThreadStackCheck) for os_ThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.os_ThreadDispatch) refers to rtx_thread.o(.text.os_ThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.os_ThreadWaitExit) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_thread.o(.text.os_ThreadWaitExit) refers to rtx_thread.o(.text.os_ThreadDispatch) for os_ThreadDispatch
    rtx_thread.o(.ARM.exidx.text.os_ThreadWaitExit) refers to rtx_thread.o(.text.os_ThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.os_ThreadWaitEnter) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_thread.o(.text.os_ThreadWaitEnter) refers to rtx_thread.o(.text.os_ThreadStackCheck) for os_ThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.os_ThreadWaitEnter) refers to rtx_thread.o(.text.os_ThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.os_ThreadPostProcess) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_thread.o(.ARM.exidx.text.os_ThreadPostProcess) refers to rtx_thread.o(.text.os_ThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.text.os_svcThreadNew) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_thread.o(.text.os_svcThreadNew) refers to rtx_mempool.o(.text.os_MemoryPoolAlloc) for os_MemoryPoolAlloc
    rtx_thread.o(.text.os_svcThreadNew) refers to rtx_memory.o(.text.os_MemoryAlloc) for os_MemoryAlloc
    rtx_thread.o(.text.os_svcThreadNew) refers to rtx_config.o(.constdata) for os_Config
    rtx_thread.o(.text.os_svcThreadNew) refers to memseta.o(.text) for __aeabi_memset4
    rtx_thread.o(.text.os_svcThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.os_svcThreadNew) refers to rtx_thread.o(.text.os_ThreadPostProcess) for os_ThreadPostProcess
    rtx_thread.o(.text.os_svcThreadNew) refers to rtx_thread.o(.text.os_ThreadDispatch) for os_ThreadDispatch
    rtx_thread.o(.text.os_svcThreadNew) refers to rtx_mempool.o(.text.os_MemoryPoolFree) for os_MemoryPoolFree
    rtx_thread.o(.text.os_svcThreadNew) refers to rtx_memory.o(.text.os_MemoryFree) for os_MemoryFree
    rtx_thread.o(.ARM.exidx.text.os_svcThreadNew) refers to rtx_thread.o(.text.os_svcThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.os_svcThreadExit) for os_svcThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.os_svcThreadGetName) refers to rtx_thread.o(.text.os_svcThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.os_svcThreadGetId) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_thread.o(.ARM.exidx.text.os_svcThreadGetId) refers to rtx_thread.o(.text.os_svcThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.os_svcThreadGetState) refers to rtx_thread.o(.text.os_svcThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.os_svcThreadGetStackSize) refers to rtx_thread.o(.text.os_svcThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.os_svcThreadGetStackSpace) refers to rtx_config.o(.constdata) for os_Config
    rtx_thread.o(.ARM.exidx.text.os_svcThreadGetStackSpace) refers to rtx_thread.o(.text.os_svcThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.os_svcThreadSetPriority) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_thread.o(.text.os_svcThreadSetPriority) refers to rtx_thread.o(.text.os_ThreadStackCheck) for os_ThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.os_svcThreadSetPriority) refers to rtx_thread.o(.text.os_svcThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.os_svcThreadGetPriority) refers to rtx_thread.o(.text.os_svcThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.os_svcThreadYield) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_thread.o(.text.os_svcThreadYield) refers to rtx_thread.o(.text.os_ThreadStackCheck) for os_ThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.os_svcThreadYield) refers to rtx_thread.o(.text.os_svcThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.os_svcThreadSuspend) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_thread.o(.text.os_svcThreadSuspend) refers to rtx_thread.o(.text.os_ThreadStackCheck) for os_ThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.os_svcThreadSuspend) refers to rtx_thread.o(.text.os_svcThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.os_svcThreadResume) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_thread.o(.text.os_svcThreadResume) refers to rtx_thread.o(.text.os_ThreadDispatch) for os_ThreadDispatch
    rtx_thread.o(.ARM.exidx.text.os_svcThreadResume) refers to rtx_thread.o(.text.os_svcThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.os_svcThreadDetach) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_thread.o(.text.os_svcThreadDetach) refers to rtx_memory.o(.text.os_MemoryFree) for os_MemoryFree
    rtx_thread.o(.text.os_svcThreadDetach) refers to rtx_mempool.o(.text.os_MemoryPoolFree) for os_MemoryPoolFree
    rtx_thread.o(.ARM.exidx.text.os_svcThreadDetach) refers to rtx_thread.o(.text.os_svcThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.os_svcThreadJoin) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_thread.o(.text.os_svcThreadJoin) refers to rtx_thread.o(.text.os_ThreadStackCheck) for os_ThreadStackCheck
    rtx_thread.o(.text.os_svcThreadJoin) refers to rtx_memory.o(.text.os_MemoryFree) for os_MemoryFree
    rtx_thread.o(.text.os_svcThreadJoin) refers to rtx_mempool.o(.text.os_MemoryPoolFree) for os_MemoryPoolFree
    rtx_thread.o(.ARM.exidx.text.os_svcThreadJoin) refers to rtx_thread.o(.text.os_svcThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.os_svcThreadExit) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_thread.o(.text.os_svcThreadExit) refers to rtx_mutex.o(.text.os_MutexOwnerRelease) for os_MutexOwnerRelease
    rtx_thread.o(.text.os_svcThreadExit) refers to rtx_thread.o(.text.os_ThreadStackCheck) for os_ThreadStackCheck
    rtx_thread.o(.text.os_svcThreadExit) refers to rtx_memory.o(.text.os_MemoryFree) for os_MemoryFree
    rtx_thread.o(.text.os_svcThreadExit) refers to rtx_mempool.o(.text.os_MemoryPoolFree) for os_MemoryPoolFree
    rtx_thread.o(.ARM.exidx.text.os_svcThreadExit) refers to rtx_thread.o(.text.os_svcThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.os_svcThreadTerminate) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_thread.o(.text.os_svcThreadTerminate) refers to rtx_mutex.o(.text.os_MutexOwnerRelease) for os_MutexOwnerRelease
    rtx_thread.o(.text.os_svcThreadTerminate) refers to rtx_thread.o(.text.os_ThreadStackCheck) for os_ThreadStackCheck
    rtx_thread.o(.text.os_svcThreadTerminate) refers to rtx_memory.o(.text.os_MemoryFree) for os_MemoryFree
    rtx_thread.o(.text.os_svcThreadTerminate) refers to rtx_mempool.o(.text.os_MemoryPoolFree) for os_MemoryPoolFree
    rtx_thread.o(.ARM.exidx.text.os_svcThreadTerminate) refers to rtx_thread.o(.text.os_svcThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.os_svcThreadGetCount) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_thread.o(.ARM.exidx.text.os_svcThreadGetCount) refers to rtx_thread.o(.text.os_svcThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.os_svcThreadEnumerate) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_thread.o(.ARM.exidx.text.os_svcThreadEnumerate) refers to rtx_thread.o(.text.os_svcThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.os_svcThreadFlagsSet) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_thread.o(.text.os_svcThreadFlagsSet) refers to rtx_thread.o(.text.os_ThreadStackCheck) for os_ThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.os_svcThreadFlagsSet) refers to rtx_thread.o(.text.os_svcThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.os_svcThreadFlagsClear) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_thread.o(.ARM.exidx.text.os_svcThreadFlagsClear) refers to rtx_thread.o(.text.os_svcThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.os_svcThreadFlagsGet) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_thread.o(.ARM.exidx.text.os_svcThreadFlagsGet) refers to rtx_thread.o(.text.os_svcThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.os_svcThreadFlagsWait) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_thread.o(.text.os_svcThreadFlagsWait) refers to rtx_thread.o(.text.os_ThreadWaitEnter) for os_ThreadWaitEnter
    rtx_thread.o(.ARM.exidx.text.os_svcThreadFlagsWait) refers to rtx_thread.o(.text.os_svcThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.os_svcThreadNew) for os_svcThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.os_svcThreadGetName) for os_svcThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.os_svcThreadGetId) for os_svcThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.os_svcThreadGetState) for os_svcThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.os_svcThreadGetStackSize) for os_svcThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.os_svcThreadGetStackSpace) for os_svcThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.os_svcThreadSetPriority) for os_svcThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.os_svcThreadGetPriority) for os_svcThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.os_svcThreadYield) for os_svcThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.os_svcThreadSuspend) for os_svcThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.os_svcThreadResume) for os_svcThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.os_svcThreadDetach) for os_svcThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.os_svcThreadJoin) for os_svcThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.os_svcThreadTerminate) for os_svcThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.os_svcThreadGetCount) for os_svcThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.os_svcThreadEnumerate) for os_svcThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.os_PostProcess) for os_PostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.os_svcThreadFlagsSet) for os_svcThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.os_svcThreadFlagsClear) for os_svcThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.os_svcThreadFlagsGet) for os_svcThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.os_svcThreadFlagsWait) for os_svcThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_delay.o(.text.os_svcDelay) refers to rtx_thread.o(.text.os_ThreadWaitEnter) for os_ThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.os_svcDelay) refers to rtx_delay.o(.text.os_svcDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.os_svcDelayUntil) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_delay.o(.text.os_svcDelayUntil) refers to rtx_thread.o(.text.os_ThreadWaitEnter) for os_ThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.os_svcDelayUntil) refers to rtx_delay.o(.text.os_svcDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.os_svcDelay) for os_svcDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.os_svcDelayUntil) for os_svcDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    irq_cm3.o(.text) refers to rtx_system.o(.text.os_PendSV_Handler) for os_PendSV_Handler
    irq_cm3.o(.text) refers to rtx_system.o(.text.os_Tick_Handler) for os_Tick_Handler
    irq_cm3.o(.text) refers to rtx_kernel.o(.data.os) for os_Info
    irq_cm3.o(.text) refers to user_svc.o(.rodata.os_UserSVC_Table) for os_UserSVC_Table
    rtx_timer.o(.text.os_TimerTick) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_timer.o(.text.os_TimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.os_TimerTick) refers to rtx_config.o(.text) for os_Error
    rtx_timer.o(.ARM.exidx.text.os_TimerTick) refers to rtx_timer.o(.text.os_TimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.os_TimerThread) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_timer.o(.text.os_TimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.ARM.exidx.text.os_TimerThread) refers to rtx_timer.o(.text.os_TimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.os_svcTimerNew) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_timer.o(.text.os_svcTimerNew) refers to rtx_config.o(.constdata) for os_Config
    rtx_timer.o(.text.os_svcTimerNew) refers to rtx_msgqueue.o(.text.os_svcMessageQueueNew) for os_svcMessageQueueNew
    rtx_timer.o(.text.os_svcTimerNew) refers to rtx_timer.o(.text.os_TimerThread) for os_TimerThread
    rtx_timer.o(.text.os_svcTimerNew) refers to rtx_thread.o(.text.os_svcThreadNew) for os_svcThreadNew
    rtx_timer.o(.text.os_svcTimerNew) refers to rtx_mempool.o(.text.os_MemoryPoolAlloc) for os_MemoryPoolAlloc
    rtx_timer.o(.text.os_svcTimerNew) refers to rtx_memory.o(.text.os_MemoryAlloc) for os_MemoryAlloc
    rtx_timer.o(.ARM.exidx.text.os_svcTimerNew) refers to rtx_timer.o(.text.os_svcTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.os_svcTimerGetName) refers to rtx_timer.o(.text.os_svcTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.os_svcTimerStart) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_timer.o(.ARM.exidx.text.os_svcTimerStart) refers to rtx_timer.o(.text.os_svcTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.os_svcTimerStop) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_timer.o(.ARM.exidx.text.os_svcTimerStop) refers to rtx_timer.o(.text.os_svcTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.os_svcTimerIsRunning) refers to rtx_timer.o(.text.os_svcTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.os_svcTimerDelete) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_timer.o(.text.os_svcTimerDelete) refers to rtx_mempool.o(.text.os_MemoryPoolFree) for os_MemoryPoolFree
    rtx_timer.o(.text.os_svcTimerDelete) refers to rtx_memory.o(.text.os_MemoryFree) for os_MemoryFree
    rtx_timer.o(.ARM.exidx.text.os_svcTimerDelete) refers to rtx_timer.o(.text.os_svcTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.os_svcTimerNew) for os_svcTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.os_svcTimerGetName) for os_svcTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.os_svcTimerStart) for os_svcTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.os_svcTimerStop) for os_svcTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.os_svcTimerIsRunning) for os_svcTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.os_svcTimerDelete) for os_svcTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.os_MutexOwnerRelease) refers to rtx_thread.o(.text.os_ThreadListGet) for os_ThreadListGet
    rtx_mutex.o(.text.os_MutexOwnerRelease) refers to rtx_thread.o(.text.os_ThreadWaitExit) for os_ThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.os_MutexOwnerRelease) refers to rtx_mutex.o(.text.os_MutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.os_svcMutexNew) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_mutex.o(.text.os_svcMutexNew) refers to rtx_mempool.o(.text.os_MemoryPoolAlloc) for os_MemoryPoolAlloc
    rtx_mutex.o(.text.os_svcMutexNew) refers to rtx_memory.o(.text.os_MemoryAlloc) for os_MemoryAlloc
    rtx_mutex.o(.ARM.exidx.text.os_svcMutexNew) refers to rtx_mutex.o(.text.os_svcMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.os_svcMutexGetName) refers to rtx_mutex.o(.text.os_svcMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.os_svcMutexAcquire) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_mutex.o(.text.os_svcMutexAcquire) refers to rtx_thread.o(.text.os_ThreadListSort) for os_ThreadListSort
    rtx_mutex.o(.text.os_svcMutexAcquire) refers to rtx_thread.o(.text.os_ThreadListPut) for os_ThreadListPut
    rtx_mutex.o(.text.os_svcMutexAcquire) refers to rtx_thread.o(.text.os_ThreadWaitEnter) for os_ThreadWaitEnter
    rtx_mutex.o(.ARM.exidx.text.os_svcMutexAcquire) refers to rtx_mutex.o(.text.os_svcMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.os_svcMutexRelease) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_mutex.o(.text.os_svcMutexRelease) refers to rtx_thread.o(.text.os_ThreadListGet) for os_ThreadListGet
    rtx_mutex.o(.text.os_svcMutexRelease) refers to rtx_thread.o(.text.os_ThreadWaitExit) for os_ThreadWaitExit
    rtx_mutex.o(.text.os_svcMutexRelease) refers to rtx_thread.o(.text.os_ThreadDispatch) for os_ThreadDispatch
    rtx_mutex.o(.ARM.exidx.text.os_svcMutexRelease) refers to rtx_mutex.o(.text.os_svcMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.os_svcMutexGetOwner) refers to rtx_mutex.o(.text.os_svcMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.os_svcMutexDelete) refers to rtx_thread.o(.text.os_ThreadListSort) for os_ThreadListSort
    rtx_mutex.o(.text.os_svcMutexDelete) refers to rtx_thread.o(.text.os_ThreadListGet) for os_ThreadListGet
    rtx_mutex.o(.text.os_svcMutexDelete) refers to rtx_thread.o(.text.os_ThreadWaitExit) for os_ThreadWaitExit
    rtx_mutex.o(.text.os_svcMutexDelete) refers to rtx_thread.o(.text.os_ThreadDispatch) for os_ThreadDispatch
    rtx_mutex.o(.text.os_svcMutexDelete) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_mutex.o(.text.os_svcMutexDelete) refers to rtx_mempool.o(.text.os_MemoryPoolFree) for os_MemoryPoolFree
    rtx_mutex.o(.text.os_svcMutexDelete) refers to rtx_memory.o(.text.os_MemoryFree) for os_MemoryFree
    rtx_mutex.o(.ARM.exidx.text.os_svcMutexDelete) refers to rtx_mutex.o(.text.os_svcMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mempool.o(.text.os_MemoryPoolAlloc) for os_MemoryPoolAlloc
    rtx_mutex.o(.text.osMutexNew) refers to rtx_memory.o(.text.os_MemoryAlloc) for os_MemoryAlloc
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.os_svcMutexNew) for os_svcMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.os_svcMutexGetName) for os_svcMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.os_svcMutexAcquire) for os_svcMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.os_svcMutexRelease) for os_svcMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.os_svcMutexGetOwner) for os_svcMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.os_svcMutexDelete) for os_svcMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.os_MemoryInit) refers to rtx_memory.o(.text.os_MemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.os_MemoryAlloc) refers to rtx_memory.o(.text.os_MemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.os_MemoryFree) refers to rtx_memory.o(.text.os_MemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.os_MemoryPoolInit) refers to rtx_mempool.o(.text.os_MemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.os_MemoryPoolAlloc) refers to rtx_mempool.o(.text.os_MemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.os_MemoryPoolFree) refers to rtx_mempool.o(.text.os_MemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.os_MemoryPoolPostProcess) refers to rtx_thread.o(.text.os_ThreadListGet) for os_ThreadListGet
    rtx_mempool.o(.text.os_MemoryPoolPostProcess) refers to rtx_thread.o(.text.os_ThreadWaitExit) for os_ThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.os_MemoryPoolPostProcess) refers to rtx_mempool.o(.text.os_MemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.text.os_svcMemoryPoolNew) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_mempool.o(.text.os_svcMemoryPoolNew) refers to rtx_memory.o(.text.os_MemoryAlloc) for os_MemoryAlloc
    rtx_mempool.o(.text.os_svcMemoryPoolNew) refers to memseta.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.os_svcMemoryPoolNew) refers to rtx_mempool.o(.text.os_MemoryPoolPostProcess) for os_MemoryPoolPostProcess
    rtx_mempool.o(.text.os_svcMemoryPoolNew) refers to rtx_memory.o(.text.os_MemoryFree) for os_MemoryFree
    rtx_mempool.o(.ARM.exidx.text.os_svcMemoryPoolNew) refers to rtx_mempool.o(.text.os_svcMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.os_svcMemoryPoolGetName) refers to rtx_mempool.o(.text.os_svcMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.os_svcMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_mempool.o(.text.os_svcMemoryPoolAlloc) refers to rtx_thread.o(.text.os_ThreadListPut) for os_ThreadListPut
    rtx_mempool.o(.text.os_svcMemoryPoolAlloc) refers to rtx_thread.o(.text.os_ThreadWaitEnter) for os_ThreadWaitEnter
    rtx_mempool.o(.ARM.exidx.text.os_svcMemoryPoolAlloc) refers to rtx_mempool.o(.text.os_svcMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.os_svcMemoryPoolFree) refers to rtx_thread.o(.text.os_ThreadListGet) for os_ThreadListGet
    rtx_mempool.o(.text.os_svcMemoryPoolFree) refers to rtx_thread.o(.text.os_ThreadWaitExit) for os_ThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.os_svcMemoryPoolFree) refers to rtx_mempool.o(.text.os_svcMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.os_svcMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.os_svcMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.os_svcMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.os_svcMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.os_svcMemoryPoolGetCount) refers to rtx_mempool.o(.text.os_svcMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.os_svcMemoryPoolGetSpace) refers to rtx_mempool.o(.text.os_svcMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.os_svcMemoryPoolDelete) refers to rtx_thread.o(.text.os_ThreadListGet) for os_ThreadListGet
    rtx_mempool.o(.text.os_svcMemoryPoolDelete) refers to rtx_thread.o(.text.os_ThreadWaitExit) for os_ThreadWaitExit
    rtx_mempool.o(.text.os_svcMemoryPoolDelete) refers to rtx_thread.o(.text.os_ThreadDispatch) for os_ThreadDispatch
    rtx_mempool.o(.text.os_svcMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_mempool.o(.text.os_svcMemoryPoolDelete) refers to rtx_memory.o(.text.os_MemoryFree) for os_MemoryFree
    rtx_mempool.o(.ARM.exidx.text.os_svcMemoryPoolDelete) refers to rtx_mempool.o(.text.os_svcMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.os_svcMemoryPoolNew) for os_svcMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.os_svcMemoryPoolGetName) for os_svcMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.os_svcMemoryPoolAlloc) for os_svcMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.os_PostProcess) for os_PostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.os_svcMemoryPoolFree) for os_svcMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.os_svcMemoryPoolGetCapacity) for os_svcMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.os_svcMemoryPoolGetBlockSize) for os_svcMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.os_svcMemoryPoolGetCount) for os_svcMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.os_svcMemoryPoolGetSpace) for os_svcMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.os_svcMemoryPoolDelete) for os_svcMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_system.o(.text.os_Tick_Handler) refers to rtx_system.o(.text.os_SysTimerAckIRQ) for os_SysTimerAckIRQ
    rtx_system.o(.text.os_Tick_Handler) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_system.o(.text.os_Tick_Handler) refers to rtx_thread.o(.text.os_ThreadDelayTick) for os_ThreadDelayTick
    rtx_system.o(.text.os_Tick_Handler) refers to rtx_timer.o(.text.os_TimerTick) for os_TimerTick
    rtx_system.o(.text.os_Tick_Handler) refers to rtx_thread.o(.text.os_ThreadDispatch) for os_ThreadDispatch
    rtx_system.o(.text.os_Tick_Handler) refers to rtx_thread.o(.text.os_ThreadListRemove) for os_ThreadListRemove
    rtx_system.o(.text.os_Tick_Handler) refers to rtx_thread.o(.text.os_ThreadReadyPut) for os_ThreadReadyPut
    rtx_system.o(.text.os_Tick_Handler) refers to rtx_thread.o(.text.os_ThreadSwitch) for os_ThreadSwitch
    rtx_system.o(.ARM.exidx.text.os_Tick_Handler) refers to rtx_system.o(.text.os_Tick_Handler) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.os_SysTimerAckIRQ) refers to rtx_system.o(.text.os_SysTimerAckIRQ) for [Anonymous Symbol]
    rtx_system.o(.text.os_PendSV_Handler) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_system.o(.text.os_PendSV_Handler) refers to rtx_thread.o(.text.os_ThreadDispatch) for os_ThreadDispatch
    rtx_system.o(.ARM.exidx.text.os_PendSV_Handler) refers to rtx_system.o(.text.os_PendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.os_PostProcess) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_system.o(.text.os_PostProcess) refers to rtx_config.o(.text) for os_Error
    rtx_system.o(.ARM.exidx.text.os_PostProcess) refers to rtx_system.o(.text.os_PostProcess) for [Anonymous Symbol]
    rtx_system.o(.text.os_SysTimerSetup) refers to rtx_config.o(.constdata) for os_Config
    rtx_system.o(.text.os_SysTimerSetup) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_system.o(.ARM.exidx.text.os_SysTimerSetup) refers to rtx_system.o(.text.os_SysTimerSetup) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.os_SysTimerEnable) refers to rtx_system.o(.text.os_SysTimerEnable) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.os_SysTimerDisable) refers to rtx_system.o(.text.os_SysTimerDisable) for [Anonymous Symbol]
    rtx_system.o(.text.os_SysTimerGetCount) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_system.o(.ARM.exidx.text.os_SysTimerGetCount) refers to rtx_system.o(.text.os_SysTimerGetCount) for [Anonymous Symbol]
    rtx_system.o(.text.os_SysTimerGetFreq) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_system.o(.ARM.exidx.text.os_SysTimerGetFreq) refers to rtx_system.o(.text.os_SysTimerGetFreq) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.os_MessageQueuePostProcess) refers to rtx_mempool.o(.text.os_MemoryPoolFree) for os_MemoryPoolFree
    rtx_msgqueue.o(.text.os_MessageQueuePostProcess) refers to rtx_mempool.o(.text.os_MemoryPoolAlloc) for os_MemoryPoolAlloc
    rtx_msgqueue.o(.text.os_MessageQueuePostProcess) refers to rtx_thread.o(.text.os_ThreadListGet) for os_ThreadListGet
    rtx_msgqueue.o(.text.os_MessageQueuePostProcess) refers to rtx_thread.o(.text.os_ThreadWaitExit) for os_ThreadWaitExit
    rtx_msgqueue.o(.text.os_MessageQueuePostProcess) refers to rtx_thread.o(.text.os_ThreadRegPtr) for os_ThreadRegPtr
    rtx_msgqueue.o(.text.os_MessageQueuePostProcess) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.ARM.exidx.text.os_MessageQueuePostProcess) refers to rtx_msgqueue.o(.text.os_MessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.os_svcMessageQueueNew) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_msgqueue.o(.text.os_svcMessageQueueNew) refers to rtx_mempool.o(.text.os_MemoryPoolAlloc) for os_MemoryPoolAlloc
    rtx_msgqueue.o(.text.os_svcMessageQueueNew) refers to rtx_memory.o(.text.os_MemoryAlloc) for os_MemoryAlloc
    rtx_msgqueue.o(.text.os_svcMessageQueueNew) refers to memseta.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.os_svcMessageQueueNew) refers to rtx_mempool.o(.text.os_MemoryPoolInit) for os_MemoryPoolInit
    rtx_msgqueue.o(.text.os_svcMessageQueueNew) refers to rtx_msgqueue.o(.text.os_MessageQueuePostProcess) for os_MessageQueuePostProcess
    rtx_msgqueue.o(.text.os_svcMessageQueueNew) refers to rtx_mempool.o(.text.os_MemoryPoolFree) for os_MemoryPoolFree
    rtx_msgqueue.o(.text.os_svcMessageQueueNew) refers to rtx_memory.o(.text.os_MemoryFree) for os_MemoryFree
    rtx_msgqueue.o(.ARM.exidx.text.os_svcMessageQueueNew) refers to rtx_msgqueue.o(.text.os_svcMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.os_svcMessageQueueGetName) refers to rtx_msgqueue.o(.text.os_svcMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.os_svcMessageQueuePut) refers to rtx_thread.o(.text.os_ThreadListGet) for os_ThreadListGet
    rtx_msgqueue.o(.text.os_svcMessageQueuePut) refers to rtx_thread.o(.text.os_ThreadWaitExit) for os_ThreadWaitExit
    rtx_msgqueue.o(.text.os_svcMessageQueuePut) refers to rtx_thread.o(.text.os_ThreadRegPtr) for os_ThreadRegPtr
    rtx_msgqueue.o(.text.os_svcMessageQueuePut) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.os_svcMessageQueuePut) refers to rtx_mempool.o(.text.os_MemoryPoolAlloc) for os_MemoryPoolAlloc
    rtx_msgqueue.o(.text.os_svcMessageQueuePut) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_msgqueue.o(.text.os_svcMessageQueuePut) refers to rtx_thread.o(.text.os_ThreadListPut) for os_ThreadListPut
    rtx_msgqueue.o(.text.os_svcMessageQueuePut) refers to rtx_thread.o(.text.os_ThreadWaitEnter) for os_ThreadWaitEnter
    rtx_msgqueue.o(.ARM.exidx.text.os_svcMessageQueuePut) refers to rtx_msgqueue.o(.text.os_svcMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.os_svcMessageQueueGet) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_msgqueue.o(.text.os_svcMessageQueueGet) refers to rtx_thread.o(.text.os_ThreadListPut) for os_ThreadListPut
    rtx_msgqueue.o(.text.os_svcMessageQueueGet) refers to rtx_thread.o(.text.os_ThreadWaitEnter) for os_ThreadWaitEnter
    rtx_msgqueue.o(.text.os_svcMessageQueueGet) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.os_svcMessageQueueGet) refers to rtx_mempool.o(.text.os_MemoryPoolFree) for os_MemoryPoolFree
    rtx_msgqueue.o(.text.os_svcMessageQueueGet) refers to rtx_mempool.o(.text.os_MemoryPoolAlloc) for os_MemoryPoolAlloc
    rtx_msgqueue.o(.text.os_svcMessageQueueGet) refers to rtx_thread.o(.text.os_ThreadListGet) for os_ThreadListGet
    rtx_msgqueue.o(.text.os_svcMessageQueueGet) refers to rtx_thread.o(.text.os_ThreadWaitExit) for os_ThreadWaitExit
    rtx_msgqueue.o(.text.os_svcMessageQueueGet) refers to rtx_thread.o(.text.os_ThreadRegPtr) for os_ThreadRegPtr
    rtx_msgqueue.o(.ARM.exidx.text.os_svcMessageQueueGet) refers to rtx_msgqueue.o(.text.os_svcMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.os_svcMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.os_svcMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.os_svcMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.os_svcMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.os_svcMessageQueueGetCount) refers to rtx_msgqueue.o(.text.os_svcMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.os_svcMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.os_svcMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.os_svcMessageQueueReset) refers to rtx_mempool.o(.text.os_MemoryPoolFree) for os_MemoryPoolFree
    rtx_msgqueue.o(.text.os_svcMessageQueueReset) refers to rtx_mempool.o(.text.os_MemoryPoolAlloc) for os_MemoryPoolAlloc
    rtx_msgqueue.o(.text.os_svcMessageQueueReset) refers to rtx_thread.o(.text.os_ThreadListGet) for os_ThreadListGet
    rtx_msgqueue.o(.text.os_svcMessageQueueReset) refers to rtx_thread.o(.text.os_ThreadWaitExit) for os_ThreadWaitExit
    rtx_msgqueue.o(.text.os_svcMessageQueueReset) refers to rtx_thread.o(.text.os_ThreadRegPtr) for os_ThreadRegPtr
    rtx_msgqueue.o(.text.os_svcMessageQueueReset) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.os_svcMessageQueueReset) refers to rtx_thread.o(.text.os_ThreadDispatch) for os_ThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.os_svcMessageQueueReset) refers to rtx_msgqueue.o(.text.os_svcMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.os_svcMessageQueueDelete) refers to rtx_thread.o(.text.os_ThreadListGet) for os_ThreadListGet
    rtx_msgqueue.o(.text.os_svcMessageQueueDelete) refers to rtx_thread.o(.text.os_ThreadWaitExit) for os_ThreadWaitExit
    rtx_msgqueue.o(.text.os_svcMessageQueueDelete) refers to rtx_thread.o(.text.os_ThreadDispatch) for os_ThreadDispatch
    rtx_msgqueue.o(.text.os_svcMessageQueueDelete) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_msgqueue.o(.text.os_svcMessageQueueDelete) refers to rtx_memory.o(.text.os_MemoryFree) for os_MemoryFree
    rtx_msgqueue.o(.text.os_svcMessageQueueDelete) refers to rtx_mempool.o(.text.os_MemoryPoolFree) for os_MemoryPoolFree
    rtx_msgqueue.o(.ARM.exidx.text.os_svcMessageQueueDelete) refers to rtx_msgqueue.o(.text.os_svcMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_kernel.o(.data.os) for os_Info
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.os_svcMessageQueueNew) for os_svcMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.os_svcMessageQueueGetName) for os_svcMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.os_MemoryPoolAlloc) for os_MemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.os_PostProcess) for os_PostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.os_svcMessageQueuePut) for os_svcMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.os_PostProcess) for os_PostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.os_svcMessageQueueGet) for os_svcMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.os_svcMessageQueueGetCapacity) for os_svcMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.os_svcMessageQueueGetMsgSize) for os_svcMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.os_svcMessageQueueGetCount) for os_svcMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.os_svcMessageQueueGetSpace) for os_svcMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.os_svcMessageQueueReset) for os_svcMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.os_svcMessageQueueDelete) for os_svcMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    fputs.o(i.fputs) refers to retarget_io.o(.text) for fputc
    fputs_e.o(.text) refers to retarget_io.o(.text) for fputc
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to retarget_io.o(.text) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to retarget_io.o(.text) for fputc
    printfb.o(i.__0printf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to retarget_io.o(.text) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to retarget_io.o(.text) for fputc
    printfb.o(i.__0vprintf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to retarget_io.o(.text) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to retarget_io.o(.text) for fputc
    printf0.o(i.__0printf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to retarget_io.o(.text) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to retarget_io.o(.text) for fputc
    printf0.o(i.__0vprintf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to retarget_io.o(.text) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to retarget_io.o(.text) for fputc
    printf1.o(i.__0printf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to retarget_io.o(.text) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to retarget_io.o(.text) for fputc
    printf1.o(i.__0vprintf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to retarget_io.o(.text) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to retarget_io.o(.text) for fputc
    printf2.o(i.__0printf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to retarget_io.o(.text) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to retarget_io.o(.text) for fputc
    printf2.o(i.__0vprintf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to retarget_io.o(.text) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to retarget_io.o(.text) for fputc
    printf3.o(i.__0printf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to retarget_io.o(.text) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to retarget_io.o(.text) for fputc
    printf3.o(i.__0vprintf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to retarget_io.o(.text) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to retarget_io.o(.text) for fputc
    printf4.o(i.__0printf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to retarget_io.o(.text) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to retarget_io.o(.text) for fputc
    printf4.o(i.__0vprintf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to retarget_io.o(.text) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to retarget_io.o(.text) for fputc
    printf5.o(i.__0printf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to retarget_io.o(.text) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to retarget_io.o(.text) for fputc
    printf5.o(i.__0vprintf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to retarget_io.o(.text) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to retarget_io.o(.text) for fputc
    printf6.o(i.__0printf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to retarget_io.o(.text) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to retarget_io.o(.text) for fputc
    printf6.o(i.__0vprintf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to retarget_io.o(.text) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to retarget_io.o(.text) for fputc
    printf7.o(i.__0printf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to retarget_io.o(.text) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to retarget_io.o(.text) for fputc
    printf7.o(i.__0vprintf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to retarget_io.o(.text) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to retarget_io.o(.text) for fputc
    printf8.o(i.__0printf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to retarget_io.o(.text) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to retarget_io.o(.text) for fputc
    printf8.o(i.__0vprintf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to retarget_io.o(.text) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to retarget_io.o(.text) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to retarget_io.o(.text) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to retarget_io.o(.text) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_armcm3.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_armcm3.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to blinky.o(.text) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to blinky.o(.text) for main
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr


==============================================================================

Removing Unused input sections from the image.

    Removing blinky.o(.rev16_text), (4 bytes).
    Removing blinky.o(.revsh_text), (4 bytes).
    Removing blinky.o(.rrx_text), (6 bytes).
    Removing rtx_config.o(.data), (4 bytes).
    Removing startup_armcm3.o(HEAP), (3072 bytes).
    Removing system_armcm3.o(.rev16_text), (4 bytes).
    Removing system_armcm3.o(.revsh_text), (4 bytes).
    Removing system_armcm3.o(.rrx_text), (6 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.os_svcKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.os_svcKernelGetInfo), (66 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.os_svcKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.os_svcKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.os_svcKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.os_svcKernelLock), (24 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.os_svcKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.os_svcKernelUnlock), (20 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.os_svcKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.os_svcKernelSuspend), (134 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.os_svcKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.os_svcKernelResume), (226 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.os_svcKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.os_svcKernelGetTickCount), (14 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.os_svcKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.os_svcKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.os_svcKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.os_svcKernelGetSysTimerCount), (4 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.os_svcKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.os_svcKernelGetSysTimerFreq), (4 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.os_svcKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (112 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.data.os_irq_cm_lib_ref), (4 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_ThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_ThreadListGet), (8 bytes).
    Removing rtx_thread.o(.text.os_ThreadListSort), (96 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_ThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_ThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.text.os_ThreadListUnlink), (26 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_ThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_ThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.text.os_ThreadDelayInsert), (160 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_ThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.text.os_ThreadDelayRemove), (118 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_ThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_ThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_ThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.text.os_ThreadBlock), (70 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_ThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_ThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_ThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_ThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_ThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_ThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_ThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_svcThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.os_svcThreadGetName), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_svcThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.os_svcThreadGetId), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_svcThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.os_svcThreadGetState), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_svcThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.os_svcThreadGetStackSize), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_svcThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.os_svcThreadGetStackSpace), (74 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_svcThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.os_svcThreadSetPriority), (324 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_svcThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.os_svcThreadGetPriority), (30 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_svcThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.os_svcThreadYield), (142 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_svcThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.os_svcThreadSuspend), (294 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_svcThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.os_svcThreadResume), (170 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_svcThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.os_svcThreadDetach), (186 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_svcThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.os_svcThreadJoin), (336 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_svcThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_svcThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.os_svcThreadTerminate), (660 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_svcThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.os_svcThreadGetCount), (54 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_svcThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.os_svcThreadEnumerate), (112 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_svcThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_svcThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.os_svcThreadFlagsClear), (82 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_svcThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.os_svcThreadFlagsGet), (30 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_svcThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.os_svcThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetId), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.os_svcDelay), (8 bytes).
    Removing rtx_delay.o(.text.os_svcDelayUntil), (52 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.os_svcDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (40 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing irq_cm3.o(.constdata), (1 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.os_TimerTick), (8 bytes).
    Removing rtx_timer.o(.text.os_TimerThread), (42 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.os_TimerThread), (8 bytes).
    Removing rtx_timer.o(.text.os_svcTimerNew), (234 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.os_svcTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.os_svcTimerGetName), (22 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.os_svcTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.os_svcTimerStart), (184 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.os_svcTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.os_svcTimerStop), (82 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.os_svcTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.os_svcTimerIsRunning), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.os_svcTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.os_svcTimerDelete), (132 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.os_svcTimerDelete), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (80 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.os_MutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.text.os_svcMutexNew), (114 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.os_svcMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.os_svcMutexGetName), (22 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.os_svcMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.text.os_svcMutexAcquire), (158 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.os_svcMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.text.os_svcMutexRelease), (204 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.os_svcMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.os_svcMutexGetOwner), (28 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.os_svcMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.text.os_svcMutexDelete), (214 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.os_svcMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexNew), (168 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexAcquire), (40 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexRelease), (40 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexDelete), (40 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.os_MemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.os_MemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.os_MemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.os_MemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.os_MemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.os_MemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.os_MemoryPoolPostProcess), (78 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.os_MemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.os_svcMemoryPoolNew), (450 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.os_svcMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.os_svcMemoryPoolGetName), (22 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.os_svcMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.os_svcMemoryPoolAlloc), (98 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.os_svcMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.os_svcMemoryPoolFree), (154 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.os_svcMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.os_svcMemoryPoolGetCapacity), (22 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.os_svcMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.os_svcMemoryPoolGetBlockSize), (22 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.os_svcMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.os_svcMemoryPoolGetCount), (22 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.os_svcMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.os_svcMemoryPoolGetSpace), (26 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.os_svcMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.os_svcMemoryPoolDelete), (188 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.os_svcMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (64 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (108 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (132 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (56 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (56 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (56 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (60 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (40 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.os_Tick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.os_SysTimerAckIRQ), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.os_PendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.os_PostProcess), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.os_SysTimerSetup), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.os_SysTimerEnable), (8 bytes).
    Removing rtx_system.o(.text.os_SysTimerDisable), (14 bytes).
    Removing rtx_system.o(.ARM.exidx.text.os_SysTimerDisable), (8 bytes).
    Removing rtx_system.o(.text.os_SysTimerGetCount), (58 bytes).
    Removing rtx_system.o(.ARM.exidx.text.os_SysTimerGetCount), (8 bytes).
    Removing rtx_system.o(.text.os_SysTimerGetFreq), (12 bytes).
    Removing rtx_system.o(.ARM.exidx.text.os_SysTimerGetFreq), (8 bytes).
    Removing user_svc.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.text.os_MessageQueuePostProcess), (446 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.os_MessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.text.os_svcMessageQueueNew), (352 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.os_svcMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.os_svcMessageQueueGetName), (22 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.os_svcMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.os_svcMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.os_svcMessageQueueGet), (398 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.os_svcMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.os_svcMessageQueueGetCapacity), (22 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.os_svcMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.os_svcMessageQueueGetMsgSize), (22 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.os_svcMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.os_svcMessageQueueGetCount), (22 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.os_svcMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.os_svcMessageQueueGetSpace), (26 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.os_svcMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.os_svcMessageQueueReset), (394 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.os_svcMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.os_svcMessageQueueDelete), (142 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.os_svcMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueNew), (64 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGet), (180 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (56 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (56 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (56 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (60 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (40 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (40 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing dadd.o(.text), (334 bytes).
    Removing dmul.o(.text), (228 bytes).
    Removing ddiv.o(.text), (222 bytes).
    Removing dfixul.o(.text), (48 bytes).
    Removing cdrcmple.o(.text), (48 bytes).
    Removing depilogue.o(.text), (186 bytes).

320 unused section(s) (total 16561 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      192  startup_armcm3.o(RESET)
    ../../../Source/rtx_delay.c              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    ../../../Source/rtx_kernel.c             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    ../../../Source/rtx_memory.c             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    ../../../Source/rtx_mempool.c            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    ../../../Source/rtx_msgqueue.c           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    ../../../Source/rtx_mutex.c              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    ../../../Source/rtx_system.c             0x00000000   Number         0  rtx_system.o ABSOLUTE
    ../../../Source/rtx_thread.c             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    ../../../Source/rtx_timer.c              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    ../../../Source/user_svc.c               0x00000000   Number         0  user_svc.o ABSOLUTE
    ../clib/../cmprslib/zerorunl2.c          0x00000000   Number         0  __dczerorl2.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf8.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf7.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf6.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf0.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf2.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfb.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf3.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf4.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf5.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf1.o ABSOLUTE
    ../clib/microlib/printf/stubs.s          0x00000000   Number         0  stubs.o ABSOLUTE
    ../clib/microlib/stdio/fputs.c           0x00000000   Number         0  fputs_e.o ABSOLUTE
    ../clib/microlib/stdio/fputs.c           0x00000000   Number         0  fputs.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stderr.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    ..\..\..\Source\ARM\irq_cm3.s            0x00000000   Number         0  irq_cm3.o ABSOLUTE
    Blinky.c                                 0x00000000   Number         0  blinky.o ABSOLUTE
    Blinky.c                                 0x00000000   Number         0  blinky.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\Keil\ARM_Compiler\1.2.0-Dev8\Source\retarget_io.c 0x00000000   Number         0  retarget_io.o ABSOLUTE
    RTE\CMSIS\RTX_Config.c                   0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\Device\ARMCM3\startup_ARMCM3.s       0x00000000   Number         0  startup_armcm3.o ABSOLUTE
    RTE\Device\ARMCM3\system_ARMCM3.c        0x00000000   Number         0  system_armcm3.o ABSOLUTE
    RTE\\Device\\ARMCM3\\system_ARMCM3.c     0x00000000   Number         0  system_armcm3.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    .ARM.Collect$$$$00000000                 0x000000c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x000000c0   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x000000c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x000000c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x000000c8   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x000000c8   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    .ARM.Collect$$$$0000000D                 0x000000d0   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x000000d0   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x000000d0   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    __lit__00000000                          0x000000d0   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x000000d4   Section        0  blinky.o(.text)
    .text                                    0x000002a0   Section        0  rtx_config.o(.text)
    .text                                    0x000002c4   Section        0  retarget_io.o(.text)
    stdout_putchar                           0x00000309   Thumb Code    12  retarget_io.o(.text)
    .text                                    0x000003ec   Section       36  startup_armcm3.o(.text)
    .text                                    0x00000410   Section        0  system_armcm3.o(.text)
    .text                                    0x00000438   Section      124  irq_cm3.o(.text)
    .text                                    0x000004b4   Section        0  memcpya.o(.text)
    .text                                    0x000004d8   Section        0  memseta.o(.text)
    .text                                    0x000004fc   Section        0  uidiv.o(.text)
    .text                                    0x00000528   Section       36  init.o(.text)
    .text                                    0x0000054c   Section        0  __dczerorl2.o(.text)
    [Anonymous Symbol]                       0x000005a4   Section        0  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x000005cc   Section        0  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x00000608   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x0000063c   Section        0  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x000006b4   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x0000073c   Section        0  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x0000074c   Section        0  rtx_thread.o(.text.osThreadFlagsSet)
    loop8                                    0x00000786   Number         0  rtx_thread.o(.text.osThreadFlagsSet)
    exit8                                    0x00000796   Number         0  rtx_thread.o(.text.osThreadFlagsSet)
    [Anonymous Symbol]                       0x000007b0   Section        0  rtx_thread.o(.text.osThreadFlagsWait)
    [Anonymous Symbol]                       0x000007d8   Section        0  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x00000818   Section        0  rtx_memory.o(.text.os_MemoryAlloc)
    [Anonymous Symbol]                       0x00000888   Section        0  rtx_memory.o(.text.os_MemoryFree)
    [Anonymous Symbol]                       0x000008d4   Section        0  rtx_memory.o(.text.os_MemoryInit)
    [Anonymous Symbol]                       0x00000904   Section        0  rtx_mempool.o(.text.os_MemoryPoolAlloc)
    loop10                                   0x0000090e   Number         0  rtx_mempool.o(.text.os_MemoryPoolAlloc)
    update0                                  0x0000091a   Number         0  rtx_mempool.o(.text.os_MemoryPoolAlloc)
    loop20                                   0x00000924   Number         0  rtx_mempool.o(.text.os_MemoryPoolAlloc)
    exit0                                    0x00000932   Number         0  rtx_mempool.o(.text.os_MemoryPoolAlloc)
    [Anonymous Symbol]                       0x00000934   Section        0  rtx_mempool.o(.text.os_MemoryPoolFree)
    loop11                                   0x00000944   Number         0  rtx_mempool.o(.text.os_MemoryPoolFree)
    loop21                                   0x0000095e   Number         0  rtx_mempool.o(.text.os_MemoryPoolFree)
    exit1                                    0x0000096c   Number         0  rtx_mempool.o(.text.os_MemoryPoolFree)
    [Anonymous Symbol]                       0x00000978   Section        0  rtx_mempool.o(.text.os_MemoryPoolInit)
    [Anonymous Symbol]                       0x000009c8   Section        0  rtx_mutex.o(.text.os_MutexOwnerRelease)
    [Anonymous Symbol]                       0x00000a14   Section        0  rtx_system.o(.text.os_PendSV_Handler)
    loop0                                    0x00000a2c   Number         0  rtx_system.o(.text.os_PendSV_Handler)
    update0                                  0x00000a38   Number         0  rtx_system.o(.text.os_PendSV_Handler)
    exit0                                    0x00000a42   Number         0  rtx_system.o(.text.os_PendSV_Handler)
    loop1                                    0x00000a4c   Number         0  rtx_system.o(.text.os_PendSV_Handler)
    update1                                  0x00000a58   Number         0  rtx_system.o(.text.os_PendSV_Handler)
    exit1                                    0x00000a60   Number         0  rtx_system.o(.text.os_PendSV_Handler)
    loop2                                    0x00000a96   Number         0  rtx_system.o(.text.os_PendSV_Handler)
    update2                                  0x00000aa2   Number         0  rtx_system.o(.text.os_PendSV_Handler)
    exit2                                    0x00000aac   Number         0  rtx_system.o(.text.os_PendSV_Handler)
    [Anonymous Symbol]                       0x00000abc   Section        0  rtx_system.o(.text.os_PostProcess)
    loop3                                    0x00000ad0   Number         0  rtx_system.o(.text.os_PostProcess)
    update3                                  0x00000ade   Number         0  rtx_system.o(.text.os_PostProcess)
    exit3                                    0x00000ae8   Number         0  rtx_system.o(.text.os_PostProcess)
    loop4                                    0x00000af2   Number         0  rtx_system.o(.text.os_PostProcess)
    update4                                  0x00000afe   Number         0  rtx_system.o(.text.os_PostProcess)
    exit4                                    0x00000b06   Number         0  rtx_system.o(.text.os_PostProcess)
    [Anonymous Symbol]                       0x00000b34   Section        0  rtx_system.o(.text.os_SysTimerAckIRQ)
    [Anonymous Symbol]                       0x00000b40   Section        0  rtx_system.o(.text.os_SysTimerEnable)
    [Anonymous Symbol]                       0x00000b50   Section        0  rtx_system.o(.text.os_SysTimerSetup)
    [Anonymous Symbol]                       0x00000b8c   Section        0  rtx_thread.o(.text.os_ThreadDelayTick)
    [Anonymous Symbol]                       0x00000c14   Section        0  rtx_thread.o(.text.os_ThreadDispatch)
    [Anonymous Symbol]                       0x00000d6c   Section        0  rtx_thread.o(.text.os_ThreadListGet)
    [Anonymous Symbol]                       0x00000d88   Section        0  rtx_thread.o(.text.os_ThreadListPut)
    [Anonymous Symbol]                       0x00000dc0   Section        0  rtx_thread.o(.text.os_ThreadListRemove)
    [Anonymous Symbol]                       0x00000ddc   Section        0  rtx_thread.o(.text.os_ThreadPostProcess)
    loop0                                    0x00000dfc   Number         0  rtx_thread.o(.text.os_ThreadPostProcess)
    update0                                  0x00000e10   Number         0  rtx_thread.o(.text.os_ThreadPostProcess)
    exit0                                    0x00000e1c   Number         0  rtx_thread.o(.text.os_ThreadPostProcess)
    loop1                                    0x00000e3e   Number         0  rtx_thread.o(.text.os_ThreadPostProcess)
    update1                                  0x00000e4e   Number         0  rtx_thread.o(.text.os_ThreadPostProcess)
    exit1                                    0x00000e5a   Number         0  rtx_thread.o(.text.os_ThreadPostProcess)
    [Anonymous Symbol]                       0x00000f04   Section        0  rtx_thread.o(.text.os_ThreadReadyPut)
    [Anonymous Symbol]                       0x00000f4c   Section        0  rtx_thread.o(.text.os_ThreadRegPtr)
    [Anonymous Symbol]                       0x00000f54   Section        0  rtx_thread.o(.text.os_ThreadStackCheck)
    [Anonymous Symbol]                       0x00000f84   Section        0  rtx_thread.o(.text.os_ThreadSwitch)
    [Anonymous Symbol]                       0x00000f98   Section        0  rtx_thread.o(.text.os_ThreadWaitEnter)
    [Anonymous Symbol]                       0x0000107c   Section        0  rtx_thread.o(.text.os_ThreadWaitExit)
    [Anonymous Symbol]                       0x0000113c   Section        0  rtx_system.o(.text.os_Tick_Handler)
    [Anonymous Symbol]                       0x000011b4   Section        0  rtx_timer.o(.text.os_TimerTick)
    [Anonymous Symbol]                       0x00001260   Section        0  rtx_delay.o(.text.os_svcDelay)
    [Anonymous Symbol]                       0x00001274   Section        0  rtx_kernel.o(.text.os_svcKernelGetState)
    [Anonymous Symbol]                       0x00001280   Section        0  rtx_kernel.o(.text.os_svcKernelInitialize)
    [Anonymous Symbol]                       0x00001440   Section        0  rtx_kernel.o(.text.os_svcKernelStart)
    [Anonymous Symbol]                       0x000014c0   Section        0  rtx_msgqueue.o(.text.os_svcMessageQueuePut)
    loop2                                    0x000015be   Number         0  rtx_msgqueue.o(.text.os_svcMessageQueuePut)
    exit2                                    0x000015cc   Number         0  rtx_msgqueue.o(.text.os_svcMessageQueuePut)
    [Anonymous Symbol]                       0x000015d4   Section        0  rtx_thread.o(.text.os_svcThreadExit)
    [Anonymous Symbol]                       0x0000170c   Section        0  rtx_thread.o(.text.os_svcThreadFlagsSet)
    loop2                                    0x0000173c   Number         0  rtx_thread.o(.text.os_svcThreadFlagsSet)
    exit2                                    0x0000174c   Number         0  rtx_thread.o(.text.os_svcThreadFlagsSet)
    loop3                                    0x00001766   Number         0  rtx_thread.o(.text.os_svcThreadFlagsSet)
    update3                                  0x0000177a   Number         0  rtx_thread.o(.text.os_svcThreadFlagsSet)
    exit3                                    0x00001786   Number         0  rtx_thread.o(.text.os_svcThreadFlagsSet)
    loop4                                    0x000017aa   Number         0  rtx_thread.o(.text.os_svcThreadFlagsSet)
    update4                                  0x000017ba   Number         0  rtx_thread.o(.text.os_svcThreadFlagsSet)
    exit4                                    0x000017c6   Number         0  rtx_thread.o(.text.os_svcThreadFlagsSet)
    [Anonymous Symbol]                       0x000018f4   Section        0  rtx_thread.o(.text.os_svcThreadFlagsWait)
    loop6                                    0x00001930   Number         0  rtx_thread.o(.text.os_svcThreadFlagsWait)
    update6                                  0x00001944   Number         0  rtx_thread.o(.text.os_svcThreadFlagsWait)
    exit6                                    0x00001950   Number         0  rtx_thread.o(.text.os_svcThreadFlagsWait)
    loop7                                    0x00001974   Number         0  rtx_thread.o(.text.os_svcThreadFlagsWait)
    update7                                  0x00001984   Number         0  rtx_thread.o(.text.os_svcThreadFlagsWait)
    exit7                                    0x00001990   Number         0  rtx_thread.o(.text.os_svcThreadFlagsWait)
    [Anonymous Symbol]                       0x000019b8   Section        0  rtx_thread.o(.text.os_svcThreadNew)
    i.__0printf$1                            0x00001bdc   Section        0  printf1.o(i.__0printf$1)
    i.__scatterload_copy                     0x00001bfc   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00001c0a   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00001c0c   Section       14  handlers.o(i.__scatterload_zeroinit)
    i._printf_core                           0x00001c1c   Section        0  printf1.o(i._printf_core)
    _printf_core                             0x00001c1d   Thumb Code   336  printf1.o(i._printf_core)
    i.fputs                                  0x00001d70   Section        0  fputs.o(i.fputs)
    .constdata                               0x00001d88   Section      200  rtx_config.o(.constdata)
    os_idle_thread_attr                      0x00001d88   Data          36  rtx_config.o(.constdata)
    os_timer_thread_attr                     0x00001dac   Data          36  rtx_config.o(.constdata)
    os_timer_mq_attr                         0x00001dd0   Data          24  rtx_config.o(.constdata)
    [Anonymous Symbol]                       0x00001e54   Section        0  rtx_kernel.o(.rodata.str1.4)
    .L.str                                   0x00001e54   Data          11  rtx_kernel.o(.rodata.str1.4)
    .bss.os                                  0x20000000   Section     4160  rtx_config.o(.bss.os)
    os_mem                                   0x20000000   Data        4096  rtx_config.o(.bss.os)
    os_isr_queue                             0x20001000   Data          64  rtx_config.o(.bss.os)
    .bss.os.msgqueue.cb                      0x20001040   Section       52  rtx_config.o(.bss.os.msgqueue.cb)
    os_timer_mq_cb                           0x20001040   Data          52  rtx_config.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.mem                     0x20001074   Section       80  rtx_config.o(.bss.os.msgqueue.mem)
    os_timer_mq_data                         0x20001074   Data          80  rtx_config.o(.bss.os.msgqueue.mem)
    .bss.os.thread.cb                        0x200010c4   Section      512  rtx_config.o(.bss.os.thread.cb)
    os_thread_cb                             0x200010c4   Data         384  rtx_config.o(.bss.os.thread.cb)
    os_idle_thread_cb                        0x20001244   Data          64  rtx_config.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x20001284   Data          64  rtx_config.o(.bss.os.thread.cb)
    .bss.os.thread.stack                     0x200012c8   Section     2800  rtx_config.o(.bss.os.thread.stack)
    os_thread_def_stack                      0x200012c8   Data        2400  rtx_config.o(.bss.os.thread.stack)
    os_idle_thread_stack                     0x20001c28   Data         200  rtx_config.o(.bss.os.thread.stack)
    os_timer_thread_stack                    0x20001cf0   Data         200  rtx_config.o(.bss.os.thread.stack)
    .data                                    0x20001db8   Section       20  blinky.o(.data)
    .data                                    0x20001dcc   Section        4  retarget_io.o(.data)
    .data                                    0x20001dd0   Section        4  system_armcm3.o(.data)
    .data                                    0x20001dd4   Section        4  stdout.o(.data)
    .data                                    0x20001dd8   Section        4  stderr.o(.data)
    .data.os.thread.mpi                      0x20001e88   Section       48  rtx_config.o(.data.os.thread.mpi)
    os_mpi_thread                            0x20001e88   Data          24  rtx_config.o(.data.os.thread.mpi)
    os_mpi_def_stack                         0x20001ea0   Data          24  rtx_config.o(.data.os.thread.mpi)
    STACK                                    0x20001eb8   Section     1024  startup_armcm3.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  blinky.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_armcm3.o(RESET)
    _printf_a                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_c                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_charcount                        0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_d                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_e                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_f                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_fp_dec                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_fp_hex                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_g                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_i                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_int_dec                          0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_l                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lc                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_ll                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lld                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lli                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llo                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llu                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llx                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_dec                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_hex                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_oct                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_ls                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_mbtowc                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_n                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_o                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_p                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_percent                          0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_pre_padding                      0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_s                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_str                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_truncate_signed                  0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_truncate_unsigned                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_u                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_wc                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_wctomb                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_x                                0x00000000   Number         0  stubs.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_End                            0x000000c0   Data           0  startup_armcm3.o(RESET)
    __Vectors_Size                           0x000000c0   Number         0  startup_armcm3.o ABSOLUTE
    __main                                   0x000000c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x000000c1   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x000000c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x000000c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x000000c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x000000c9   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x000000c9   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x000000d1   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x000000d1   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Switch_On                                0x000000d5   Thumb Code    14  blinky.o(.text)
    Switch_Off                               0x000000e3   Thumb Code    14  blinky.o(.text)
    signal_func                              0x000000f1   Thumb Code    62  blinky.o(.text)
    phaseA                                   0x0000012f   Thumb Code    36  blinky.o(.text)
    phaseB                                   0x00000153   Thumb Code    36  blinky.o(.text)
    phaseC                                   0x00000177   Thumb Code    36  blinky.o(.text)
    phaseD                                   0x0000019b   Thumb Code    36  blinky.o(.text)
    clock                                    0x000001bf   Thumb Code    36  blinky.o(.text)
    app_main                                 0x000001e3   Thumb Code   102  blinky.o(.text)
    main                                     0x00000249   Thumb Code    36  blinky.o(.text)
    os_IdleThread                            0x000002a1   Thumb Code     4  rtx_config.o(.text)
    os_Error                                 0x000002a5   Thumb Code    32  rtx_config.o(.text)
    ITM_SendChar                             0x000002c5   Thumb Code    42  retarget_io.o(.text)
    ITM_ReceiveChar                          0x000002ef   Thumb Code    26  retarget_io.o(.text)
    fputc                                    0x00000315   Thumb Code    26  retarget_io.o(.text)
    fgetc                                    0x0000032f   Thumb Code     8  retarget_io.o(.text)
    __backspace                              0x00000337   Thumb Code     8  retarget_io.o(.text)
    abort                                    0x0000033f   Thumb Code     4  retarget_io.o(.text)
    __aeabi_assert                           0x00000343   Thumb Code   110  retarget_io.o(.text)
    Reset_Handler                            0x000003ed   Thumb Code     8  startup_armcm3.o(.text)
    NMI_Handler                              0x000003f5   Thumb Code     2  startup_armcm3.o(.text)
    HardFault_Handler                        0x000003f7   Thumb Code     2  startup_armcm3.o(.text)
    MemManage_Handler                        0x000003f9   Thumb Code     2  startup_armcm3.o(.text)
    BusFault_Handler                         0x000003fb   Thumb Code     2  startup_armcm3.o(.text)
    UsageFault_Handler                       0x000003fd   Thumb Code     2  startup_armcm3.o(.text)
    DebugMon_Handler                         0x00000401   Thumb Code     2  startup_armcm3.o(.text)
    AACI_IRQHandler                          0x00000407   Thumb Code     0  startup_armcm3.o(.text)
    CAN_IRQHandler                           0x00000407   Thumb Code     0  startup_armcm3.o(.text)
    CHLCD_IRQHandler                         0x00000407   Thumb Code     0  startup_armcm3.o(.text)
    CLCD_IRQHandler                          0x00000407   Thumb Code     0  startup_armcm3.o(.text)
    CPU_CLCD_IRQHandler                      0x00000407   Thumb Code     0  startup_armcm3.o(.text)
    ENET_IRQHandler                          0x00000407   Thumb Code     0  startup_armcm3.o(.text)
    FLEXRAY_IRQHandler                       0x00000407   Thumb Code     0  startup_armcm3.o(.text)
    I2C_IRQHandler                           0x00000407   Thumb Code     0  startup_armcm3.o(.text)
    LIN_IRQHandler                           0x00000407   Thumb Code     0  startup_armcm3.o(.text)
    MCIA_IRQHandler                          0x00000407   Thumb Code     0  startup_armcm3.o(.text)
    MCIB_IRQHandler                          0x00000407   Thumb Code     0  startup_armcm3.o(.text)
    RTC_IRQHandler                           0x00000407   Thumb Code     0  startup_armcm3.o(.text)
    SPI_IRQHandler                           0x00000407   Thumb Code     0  startup_armcm3.o(.text)
    TIM0_IRQHandler                          0x00000407   Thumb Code     0  startup_armcm3.o(.text)
    TIM2_IRQHandler                          0x00000407   Thumb Code     0  startup_armcm3.o(.text)
    UART0_IRQHandler                         0x00000407   Thumb Code     0  startup_armcm3.o(.text)
    UART1_IRQHandler                         0x00000407   Thumb Code     0  startup_armcm3.o(.text)
    UART2_IRQHandler                         0x00000407   Thumb Code     0  startup_armcm3.o(.text)
    UART3_IRQHandler                         0x00000407   Thumb Code     0  startup_armcm3.o(.text)
    UART4_IRQHandler                         0x00000407   Thumb Code     0  startup_armcm3.o(.text)
    USBDC_IRQHandler                         0x00000407   Thumb Code     0  startup_armcm3.o(.text)
    USBHC_IRQHandler                         0x00000407   Thumb Code     0  startup_armcm3.o(.text)
    WDT_IRQHandler                           0x00000407   Thumb Code     0  startup_armcm3.o(.text)
    SystemCoreClockUpdate                    0x00000411   Thumb Code     8  system_armcm3.o(.text)
    SystemInit                               0x00000419   Thumb Code    14  system_armcm3.o(.text)
    SVC_Handler                              0x00000439   Thumb Code    92  irq_cm3.o(.text)
    PendSV_Handler                           0x00000495   Thumb Code    12  irq_cm3.o(.text)
    SysTick_Handler                          0x000004a1   Thumb Code    12  irq_cm3.o(.text)
    __aeabi_memcpy                           0x000004b5   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x000004b5   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x000004b5   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x000004d9   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x000004d9   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x000004d9   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x000004e7   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x000004e7   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x000004e7   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x000004eb   Thumb Code    18  memseta.o(.text)
    __aeabi_uidiv                            0x000004fd   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x000004fd   Thumb Code    44  uidiv.o(.text)
    __scatterload                            0x00000529   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x00000529   Thumb Code     0  init.o(.text)
    __decompress                             0x0000054d   Thumb Code     0  __dczerorl2.o(.text)
    __decompress1                            0x0000054d   Thumb Code    86  __dczerorl2.o(.text)
    osDelay                                  0x000005a5   Thumb Code    34  rtx_delay.o(.text.osDelay)
    osKernelGetState                         0x000005cd   Thumb Code    56  rtx_kernel.o(.text.osKernelGetState)
    osKernelInitialize                       0x00000609   Thumb Code    48  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x0000063d   Thumb Code   110  rtx_kernel.o(.text.osKernelStart)
    osMessageQueuePut                        0x000006b5   Thumb Code   132  rtx_msgqueue.o(.text.osMessageQueuePut)
    osThreadExit                             0x0000073d   Thumb Code    10  rtx_thread.o(.text.osThreadExit)
    osThreadFlagsSet                         0x0000074d   Thumb Code    94  rtx_thread.o(.text.osThreadFlagsSet)
    osThreadFlagsWait                        0x000007b1   Thumb Code    34  rtx_thread.o(.text.osThreadFlagsWait)
    osThreadNew                              0x000007d9   Thumb Code    60  rtx_thread.o(.text.osThreadNew)
    os_MemoryAlloc                           0x00000819   Thumb Code   110  rtx_memory.o(.text.os_MemoryAlloc)
    os_MemoryFree                            0x00000889   Thumb Code    76  rtx_memory.o(.text.os_MemoryFree)
    os_MemoryInit                            0x000008d5   Thumb Code    46  rtx_memory.o(.text.os_MemoryInit)
    os_MemoryPoolAlloc                       0x00000905   Thumb Code    48  rtx_mempool.o(.text.os_MemoryPoolAlloc)
    os_MemoryPoolFree                        0x00000935   Thumb Code    66  rtx_mempool.o(.text.os_MemoryPoolFree)
    os_MemoryPoolInit                        0x00000979   Thumb Code    80  rtx_mempool.o(.text.os_MemoryPoolInit)
    os_MutexOwnerRelease                     0x000009c9   Thumb Code    76  rtx_mutex.o(.text.os_MutexOwnerRelease)
    os_PendSV_Handler                        0x00000a15   Thumb Code   168  rtx_system.o(.text.os_PendSV_Handler)
    os_PostProcess                           0x00000abd   Thumb Code   120  rtx_system.o(.text.os_PostProcess)
    os_SysTimerAckIRQ                        0x00000b35   Thumb Code    12  rtx_system.o(.text.os_SysTimerAckIRQ)
    os_SysTimerEnable                        0x00000b41   Thumb Code    14  rtx_system.o(.text.os_SysTimerEnable)
    os_SysTimerSetup                         0x00000b51   Thumb Code    58  rtx_system.o(.text.os_SysTimerSetup)
    os_ThreadDelayTick                       0x00000b8d   Thumb Code   136  rtx_thread.o(.text.os_ThreadDelayTick)
    os_ThreadDispatch                        0x00000c15   Thumb Code   344  rtx_thread.o(.text.os_ThreadDispatch)
    os_ThreadListGet                         0x00000d6d   Thumb Code    26  rtx_thread.o(.text.os_ThreadListGet)
    os_ThreadListPut                         0x00000d89   Thumb Code    56  rtx_thread.o(.text.os_ThreadListPut)
    os_ThreadListRemove                      0x00000dc1   Thumb Code    26  rtx_thread.o(.text.os_ThreadListRemove)
    os_ThreadPostProcess                     0x00000ddd   Thumb Code   296  rtx_thread.o(.text.os_ThreadPostProcess)
    os_ThreadReadyPut                        0x00000f05   Thumb Code    72  rtx_thread.o(.text.os_ThreadReadyPut)
    os_ThreadRegPtr                          0x00000f4d   Thumb Code     6  rtx_thread.o(.text.os_ThreadRegPtr)
    os_ThreadStackCheck                      0x00000f55   Thumb Code    46  rtx_thread.o(.text.os_ThreadStackCheck)
    os_ThreadSwitch                          0x00000f85   Thumb Code    18  rtx_thread.o(.text.os_ThreadSwitch)
    os_ThreadWaitEnter                       0x00000f99   Thumb Code   226  rtx_thread.o(.text.os_ThreadWaitEnter)
    os_ThreadWaitExit                        0x0000107d   Thumb Code   190  rtx_thread.o(.text.os_ThreadWaitExit)
    os_Tick_Handler                          0x0000113d   Thumb Code   120  rtx_system.o(.text.os_Tick_Handler)
    os_TimerTick                             0x000011b5   Thumb Code   170  rtx_timer.o(.text.os_TimerTick)
    os_svcDelay                              0x00001261   Thumb Code    20  rtx_delay.o(.text.os_svcDelay)
    os_svcKernelGetState                     0x00001275   Thumb Code    12  rtx_kernel.o(.text.os_svcKernelGetState)
    os_svcKernelInitialize                   0x00001281   Thumb Code   448  rtx_kernel.o(.text.os_svcKernelInitialize)
    os_svcKernelStart                        0x00001441   Thumb Code   126  rtx_kernel.o(.text.os_svcKernelStart)
    os_svcMessageQueuePut                    0x000014c1   Thumb Code   276  rtx_msgqueue.o(.text.os_svcMessageQueuePut)
    os_svcThreadExit                         0x000015d5   Thumb Code   310  rtx_thread.o(.text.os_svcThreadExit)
    os_svcThreadFlagsSet                     0x0000170d   Thumb Code   486  rtx_thread.o(.text.os_svcThreadFlagsSet)
    os_svcThreadFlagsWait                    0x000018f5   Thumb Code   196  rtx_thread.o(.text.os_svcThreadFlagsWait)
    os_svcThreadNew                          0x000019b9   Thumb Code   546  rtx_thread.o(.text.os_svcThreadNew)
    __0printf$1                              0x00001bdd   Thumb Code    22  printf1.o(i.__0printf$1)
    __1printf$1                              0x00001bdd   Thumb Code     0  printf1.o(i.__0printf$1)
    __2printf                                0x00001bdd   Thumb Code     0  printf1.o(i.__0printf$1)
    __scatterload_copy                       0x00001bfd   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00001c0b   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00001c0d   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    fputs                                    0x00001d71   Thumb Code    24  fputs.o(i.fputs)
    os_Config                                0x00001de8   Data         104  rtx_config.o(.constdata)
    os_UserSVC_Table                         0x00001e50   Data           4  user_svc.o(.rodata.os_UserSVC_Table)
    Region$$Table$$Base                      0x00001e60   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00001e80   Number         0  anon$$obj.o(Region$$Table)
    tid_phaseA                               0x20001db8   Data           4  blinky.o(.data)
    tid_phaseB                               0x20001dbc   Data           4  blinky.o(.data)
    tid_phaseC                               0x20001dc0   Data           4  blinky.o(.data)
    tid_phaseD                               0x20001dc4   Data           4  blinky.o(.data)
    tid_clock                                0x20001dc8   Data           4  blinky.o(.data)
    ITM_RxBuffer                             0x20001dcc   Data           4  retarget_io.o(.data)
    SystemCoreClock                          0x20001dd0   Data           4  system_armcm3.o(.data)
    __stdout                                 0x20001dd4   Data           4  stdout.o(.data)
    __stderr                                 0x20001dd8   Data           4  stderr.o(.data)
    os_Info                                  0x20001de0   Data         168  rtx_kernel.o(.data.os)
    __initial_sp                             0x200022b8   Data           0  startup_armcm3.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000000c1

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00003d38, Max: 0x00040000, ABSOLUTE, COMPRESSED[0x00001ee0])

    Execution Region ER_IROM1 (Base: 0x00000000, Size: 0x00001e80, Max: 0x00040000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x000000c0   Data   RO          134    RESET               startup_armcm3.o
    0x000000c0   0x00000000   Code   RO          625  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x000000c0   0x00000004   Code   RO          901    .ARM.Collect$$$$00000001  mc_w.l(entry2.o)
    0x000000c4   0x00000004   Code   RO          904    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x000000c8   0x00000000   Code   RO          906    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x000000c8   0x00000000   Code   RO          908    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x000000c8   0x00000008   Code   RO          909    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x000000d0   0x00000000   Code   RO          911    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x000000d0   0x00000000   Code   RO          913    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x000000d0   0x00000004   Code   RO          902    .ARM.Collect$$$$00002712  mc_w.l(entry2.o)
    0x000000d4   0x000001cc   Code   RO            4    .text               blinky.o
    0x000002a0   0x00000024   Code   RO           61    .text               rtx_config.o
    0x000002c4   0x00000128   Code   RO           97    .text               retarget_io.o
    0x000003ec   0x00000024   Code   RO          135    .text               startup_armcm3.o
    0x00000410   0x00000028   Code   RO          142    .text               system_armcm3.o
    0x00000438   0x0000007c   Code   RO          381    .text               RTX_CM3.lib(irq_cm3.o)
    0x000004b4   0x00000024   Code   RO          634    .text               mc_w.l(memcpya.o)
    0x000004d8   0x00000024   Code   RO          636    .text               mc_w.l(memseta.o)
    0x000004fc   0x0000002c   Code   RO          915    .text               mc_w.l(uidiv.o)
    0x00000528   0x00000024   Code   RO          930    .text               mc_w.l(init.o)
    0x0000054c   0x00000056   Code   RO          948    .text               mc_w.l(__dczerorl2.o)
    0x000005a2   0x00000002   PAD
    0x000005a4   0x00000028   Code   RO          366    .text.osDelay       RTX_CM3.lib(rtx_delay.o)
    0x000005cc   0x0000003c   Code   RO          199    .text.osKernelGetState  RTX_CM3.lib(rtx_kernel.o)
    0x00000608   0x00000034   Code   RO          195    .text.osKernelInitialize  RTX_CM3.lib(rtx_kernel.o)
    0x0000063c   0x00000078   Code   RO          201    .text.osKernelStart  RTX_CM3.lib(rtx_kernel.o)
    0x000006b4   0x00000088   Code   RO          599    .text.osMessageQueuePut  RTX_CM3.lib(rtx_msgqueue.o)
    0x0000073c   0x00000010   Code   RO          269    .text.osThreadExit  RTX_CM3.lib(rtx_thread.o)
    0x0000074c   0x00000064   Code   RO          343    .text.osThreadFlagsSet  RTX_CM3.lib(rtx_thread.o)
    0x000007b0   0x00000028   Code   RO          349    .text.osThreadFlagsWait  RTX_CM3.lib(rtx_thread.o)
    0x000007d8   0x00000040   Code   RO          311    .text.osThreadNew   RTX_CM3.lib(rtx_thread.o)
    0x00000818   0x0000006e   Code   RO          464    .text.os_MemoryAlloc  RTX_CM3.lib(rtx_memory.o)
    0x00000886   0x00000002   PAD
    0x00000888   0x0000004c   Code   RO          466    .text.os_MemoryFree  RTX_CM3.lib(rtx_memory.o)
    0x000008d4   0x0000002e   Code   RO          462    .text.os_MemoryInit  RTX_CM3.lib(rtx_memory.o)
    0x00000902   0x00000002   PAD
    0x00000904   0x00000030   Code   RO          481    .text.os_MemoryPoolAlloc  RTX_CM3.lib(rtx_mempool.o)
    0x00000934   0x00000042   Code   RO          483    .text.os_MemoryPoolFree  RTX_CM3.lib(rtx_mempool.o)
    0x00000976   0x00000002   PAD
    0x00000978   0x00000050   Code   RO          479    .text.os_MemoryPoolInit  RTX_CM3.lib(rtx_mempool.o)
    0x000009c8   0x0000004c   Code   RO          425    .text.os_MutexOwnerRelease  RTX_CM3.lib(rtx_mutex.o)
    0x00000a14   0x000000a8   Code   RO          538    .text.os_PendSV_Handler  RTX_CM3.lib(rtx_system.o)
    0x00000abc   0x00000078   Code   RO          540    .text.os_PostProcess  RTX_CM3.lib(rtx_system.o)
    0x00000b34   0x0000000c   Code   RO          536    .text.os_SysTimerAckIRQ  RTX_CM3.lib(rtx_system.o)
    0x00000b40   0x0000000e   Code   RO          544    .text.os_SysTimerEnable  RTX_CM3.lib(rtx_system.o)
    0x00000b4e   0x00000002   PAD
    0x00000b50   0x0000003a   Code   RO          542    .text.os_SysTimerSetup  RTX_CM3.lib(rtx_system.o)
    0x00000b8a   0x00000002   PAD
    0x00000b8c   0x00000088   Code   RO          249    .text.os_ThreadDelayTick  RTX_CM3.lib(rtx_thread.o)
    0x00000c14   0x00000158   Code   RO          259    .text.os_ThreadDispatch  RTX_CM3.lib(rtx_thread.o)
    0x00000d6c   0x0000001a   Code   RO          235    .text.os_ThreadListGet  RTX_CM3.lib(rtx_thread.o)
    0x00000d86   0x00000002   PAD
    0x00000d88   0x00000038   Code   RO          233    .text.os_ThreadListPut  RTX_CM3.lib(rtx_thread.o)
    0x00000dc0   0x0000001a   Code   RO          239    .text.os_ThreadListRemove  RTX_CM3.lib(rtx_thread.o)
    0x00000dda   0x00000002   PAD
    0x00000ddc   0x00000128   Code   RO          265    .text.os_ThreadPostProcess  RTX_CM3.lib(rtx_thread.o)
    0x00000f04   0x00000048   Code   RO          243    .text.os_ThreadReadyPut  RTX_CM3.lib(rtx_thread.o)
    0x00000f4c   0x00000006   Code   RO          251    .text.os_ThreadRegPtr  RTX_CM3.lib(rtx_thread.o)
    0x00000f52   0x00000002   PAD
    0x00000f54   0x0000002e   Code   RO          257    .text.os_ThreadStackCheck  RTX_CM3.lib(rtx_thread.o)
    0x00000f82   0x00000002   PAD
    0x00000f84   0x00000012   Code   RO          255    .text.os_ThreadSwitch  RTX_CM3.lib(rtx_thread.o)
    0x00000f96   0x00000002   PAD
    0x00000f98   0x000000e2   Code   RO          263    .text.os_ThreadWaitEnter  RTX_CM3.lib(rtx_thread.o)
    0x0000107a   0x00000002   PAD
    0x0000107c   0x000000be   Code   RO          261    .text.os_ThreadWaitExit  RTX_CM3.lib(rtx_thread.o)
    0x0000113a   0x00000002   PAD
    0x0000113c   0x00000078   Code   RO          534    .text.os_Tick_Handler  RTX_CM3.lib(rtx_system.o)
    0x000011b4   0x000000aa   Code   RO          386    .text.os_TimerTick  RTX_CM3.lib(rtx_timer.o)
    0x0000125e   0x00000002   PAD
    0x00001260   0x00000014   Code   RO          362    .text.os_svcDelay   RTX_CM3.lib(rtx_delay.o)
    0x00001274   0x0000000c   Code   RO          175    .text.os_svcKernelGetState  RTX_CM3.lib(rtx_kernel.o)
    0x00001280   0x000001c0   Code   RO          171    .text.os_svcKernelInitialize  RTX_CM3.lib(rtx_kernel.o)
    0x00001440   0x0000007e   Code   RO          177    .text.os_svcKernelStart  RTX_CM3.lib(rtx_kernel.o)
    0x000014be   0x00000002   PAD
    0x000014c0   0x00000114   Code   RO          579    .text.os_svcMessageQueuePut  RTX_CM3.lib(rtx_msgqueue.o)
    0x000015d4   0x00000136   Code   RO          295    .text.os_svcThreadExit  RTX_CM3.lib(rtx_thread.o)
    0x0000170a   0x00000002   PAD
    0x0000170c   0x000001e6   Code   RO          303    .text.os_svcThreadFlagsSet  RTX_CM3.lib(rtx_thread.o)
    0x000018f2   0x00000002   PAD
    0x000018f4   0x000000c4   Code   RO          309    .text.os_svcThreadFlagsWait  RTX_CM3.lib(rtx_thread.o)
    0x000019b8   0x00000222   Code   RO          267    .text.os_svcThreadNew  RTX_CM3.lib(rtx_thread.o)
    0x00001bda   0x00000002   PAD
    0x00001bdc   0x00000020   Code   RO          685    i.__0printf$1       mc_w.l(printf1.o)
    0x00001bfc   0x0000000e   Code   RO          942    i.__scatterload_copy  mc_w.l(handlers.o)
    0x00001c0a   0x00000002   Code   RO          943    i.__scatterload_null  mc_w.l(handlers.o)
    0x00001c0c   0x0000000e   Code   RO          944    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x00001c1a   0x00000002   PAD
    0x00001c1c   0x00000154   Code   RO          692    i._printf_core      mc_w.l(printf1.o)
    0x00001d70   0x00000018   Code   RO          628    i.fputs             mc_w.l(fputs.o)
    0x00001d88   0x000000c8   Data   RO           67    .constdata          rtx_config.o
    0x00001e50   0x00000004   Data   RO          563    .rodata.os_UserSVC_Table  RTX_CM3.lib(user_svc.o)
    0x00001e54   0x0000000b   Data   RO          219    .rodata.str1.4      RTX_CM3.lib(rtx_kernel.o)
    0x00001e5f   0x00000001   PAD
    0x00001e60   0x00000020   Data   RO          940    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Base: 0x20000000, Size: 0x000022b8, Max: 0x00020000, ABSOLUTE, COMPRESSED[0x00000060])

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00001040   Data   RW           62    .bss.os             rtx_config.o
    0x20001040   0x00000034   Data   RW           63    .bss.os.msgqueue.cb  rtx_config.o
    0x20001074   0x00000050   Data   RW           64    .bss.os.msgqueue.mem  rtx_config.o
    0x200010c4   0x00000200   Data   RW           65    .bss.os.thread.cb   rtx_config.o
    0x200012c4   0x00000004   PAD
    0x200012c8   0x00000af0   Data   RW           66    .bss.os.thread.stack  rtx_config.o
    0x20001db8   0x00000014   Data   RW            5    .data               blinky.o
    0x20001dcc   0x00000004   Data   RW           98    .data               retarget_io.o
    0x20001dd0   0x00000004   Data   RW          143    .data               system_armcm3.o
    0x20001dd4   0x00000004   Data   RW          632    .data               mc_w.l(stdout.o)
    0x20001dd8   0x00000004   Data   RW          633    .data               mc_w.l(stderr.o)
    0x20001ddc   0x00000004   PAD
    0x20001de0   0x000000a8   Data   RW          220    .data.os            RTX_CM3.lib(rtx_kernel.o)
    0x20001e88   0x00000030   Data   RW           69    .data.os.thread.mpi  rtx_config.o
    0x20001eb8   0x00000400   Zero   RW          132    STACK               startup_armcm3.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       460         52          0         20          0      10083   blinky.o
       296         60          0          4          0       4271   retarget_io.o
        36          6        200       7652          0      11989   rtx_config.o
        36          8        192          0       1024        816   startup_armcm3.o
        40         18          0          4          0        841   system_armcm3.o

    ----------------------------------------------------------------------
       868        144        424       7684       1024      28000   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         0          0          0          4          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       124         14          0          0          0        492   irq_cm3.o
        60          4          0          0          0       2635   rtx_delay.o
       818         16         11        168          0      17522   rtx_kernel.o
       232          0          0          0          0       1909   rtx_memory.o
       194          0          0          0          0      14881   rtx_mempool.o
       412          4          0          0          0      18861   rtx_msgqueue.o
        76          0          0          0          0       9431   rtx_mutex.o
       492          8          0          0          0       8047   rtx_system.o
      3200         16          0          0          0      40186   rtx_thread.o
       170          0          0          0          0      10714   rtx_timer.o
         0          0          4          0          0        416   user_svc.o
        86          0          0          0          0          0   __dczerorl2.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        24          0          0          0          0         80   fputs.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
        36          0          0          0          0         68   memcpya.o
        36          0          0          0          0        108   memseta.o
       372         14          0          0          0        184   printf1.o
         0          0          0          4          0          0   stderr.o
         0          0          0          4          0          0   stdout.o
        44          0          0          0          0         80   uidiv.o

    ----------------------------------------------------------------------
      6500         92         16        180          0     125682   Library Totals
        38          0          1          4          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      5778         62         15        168          0     125094   RTX_CM3.lib
       684         30          0          8          0        588   mc_w.l

    ----------------------------------------------------------------------
      6500         92         16        180          0     125682   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      7368        236        440       7864       1024     153370   Grand Totals
      7368        236        440         96       1024     153370   ELF Image Totals (compressed)
      7368        236        440         96          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 7808 (   7.63kB)
    Total RW  Size (RW Data + ZI Data)              8888 (   8.68kB)
    Total ROM Size (Code + RO Data + RW Data)       7904 (   7.72kB)

==============================================================================

